import{j as l,c as i,b as t,ag as e}from"./chunks/framework.CPnt7f93.js";const b=JSON.parse('{"title":"综合项目规划（一）：从“创意灵感”到“需求清单”","description":"","frontmatter":{},"headers":[],"relativePath":"python/level-3/class05.md","filePath":"python/level-3/class05.md","lastUpdated":1761651013000}'),r={name:"python/level-3/class05.md"};function n(s,a,o,h,d,u){return t(),i("div",null,[...a[0]||(a[0]=[e(`<h1 id="综合项目规划-一-从-创意灵感-到-需求清单" tabindex="-1">综合项目规划（一）：从“创意灵感”到“需求清单” <a class="header-anchor" href="#综合项目规划-一-从-创意灵感-到-需求清单" aria-label="Permalink to &quot;综合项目规划（一）：从“创意灵感”到“需求清单”&quot;">​</a></h1><h2 id="课题" tabindex="-1">课题 <a class="header-anchor" href="#课题" aria-label="Permalink to &quot;课题&quot;">​</a></h2><p>STEAM项目选题与需求分析——让创意落地的第一步</p><h2 id="教学时间" tabindex="-1">教学时间 <a class="header-anchor" href="#教学时间" aria-label="Permalink to &quot;教学时间&quot;">​</a></h2><p>2课时（90分钟）</p><h2 id="课前准备" tabindex="-1">课前准备 <a class="header-anchor" href="#课前准备" aria-label="Permalink to &quot;课前准备&quot;">​</a></h2><ul><li><strong>教师端</strong>：电脑、投影仪、多媒体课件（含3个优秀学生项目案例视频：“校园导航系统”“垃圾分类识别工具”“植物生长监测仪”）、选题参考卡（含“生活痛点”“兴趣延伸”“学科结合”三类方向）、需求分析模板（表格形式）、评分量规（选题合理性、需求清晰度）。</li><li><strong>学生端</strong>：分组座位（4-5人/组）、笔记本、便利贴（记录创意点）、项目规划本（记录讨论结果）。</li><li><strong>教学素材</strong>：项目案例手册（含每个案例的“选题背景→需求清单→功能模块”）、AI创意助手（可生成选题建议，如输入“环保”关键词返回3个相关项目方向）。</li></ul><h2 id="一、导入活动-从-问题-到-项目-——发现身边的编程需求-20分钟" tabindex="-1">一、导入活动：从“问题”到“项目”——发现身边的编程需求（20分钟） <a class="header-anchor" href="#一、导入活动-从-问题-到-项目-——发现身边的编程需求-20分钟" aria-label="Permalink to &quot;一、导入活动：从“问题”到“项目”——发现身边的编程需求（20分钟）&quot;">​</a></h2><h2 id="活动1-生活痛点-头脑风暴" tabindex="-1">活动1：“生活痛点”头脑风暴 <a class="header-anchor" href="#活动1-生活痛点-头脑风暴" aria-label="Permalink to &quot;活动1：“生活痛点”头脑风暴&quot;">​</a></h2><ul><li>教师提问：“生活中有没有遇到过不方便的事？比如‘找不到教室’‘忘记带作业’‘垃圾分类分不清’……”</li><li>小组讨论5分钟，用便利贴写下3个“想解决的问题”，贴在教室“问题墙”上。</li><li>示例引导：“如果用编程解决‘找不到教室’，可能需要什么功能？”（如输入班级→显示路线图）。</li></ul><h2 id="活动2-优秀项目案例拆解" tabindex="-1">活动2：优秀项目案例拆解 <a class="header-anchor" href="#活动2-优秀项目案例拆解" aria-label="Permalink to &quot;活动2：优秀项目案例拆解&quot;">​</a></h2><ul><li>播放“校园导航系统”案例视频：展示功能（输入起点终点→生成路径）、代码模块（坐标存储、路径计算、图形显示）。</li><li>提问：“这个项目解决了什么问题？用到了哪些之前学的知识？”（引导发现：坐标知识、列表存储、条件判断）。</li><li>总结：“好的项目=一个明确的问题+能实现的功能+编程技术支撑”。</li></ul><h2 id="二、知识点讲解-项目选题与需求分析-30分钟" tabindex="-1">二、知识点讲解：项目选题与需求分析（30分钟） <a class="header-anchor" href="#二、知识点讲解-项目选题与需求分析-30分钟" aria-label="Permalink to &quot;二、知识点讲解：项目选题与需求分析（30分钟）&quot;">​</a></h2><h2 id="模块1-如何选一个-好项目-15分钟" tabindex="-1">模块1：如何选一个“好项目”？（15分钟） <a class="header-anchor" href="#模块1-如何选一个-好项目-15分钟" aria-label="Permalink to &quot;模块1：如何选一个“好项目”？（15分钟）&quot;">​</a></h2><ul><li><strong>选题三原则</strong>（结合案例说明）： <ol><li><strong>可行性</strong>：用已学知识能实现（如“AI写诗”难度过高，“AI问答助手”用简易接口可实现）；</li><li><strong>关联性</strong>：结合生活/学科（如“数学公式计算器”关联数学，“班级考勤统计”关联班级管理）；</li><li><strong>创新性</strong>：在基础功能上加点“小特色”（如导航系统加“避开水房拥堵”提示）。</li></ol></li><li><strong>选题工具</strong>：AI创意助手使用演示——输入“环保”“学习”等关键词，生成3个选题（如输入“环保”→返回“塑料瓶回收计数工具”“碳排放计算器”）。</li></ul><h2 id="模块2-需求分析——明确-做什么-15分钟" tabindex="-1">模块2：需求分析——明确“做什么”（15分钟） <a class="header-anchor" href="#模块2-需求分析——明确-做什么-15分钟" aria-label="Permalink to &quot;模块2：需求分析——明确“做什么”（15分钟）&quot;">​</a></h2><ul><li><strong>定义</strong>：需求分析是“列出项目要实现的所有功能”，避免“做着做着发现漏了关键功能”。</li><li><strong>方法</strong>：用“用户故事”描述（格式：“作为XX，我希望XX，这样我能XX”）： <ul><li>示例（校园导航）： <ul><li>“作为学生，我希望输入班级号，能显示教学楼位置，这样我不会迷路”；</li><li>“作为老师，我希望添加‘施工路段’标记，这样能提醒学生绕路”。</li></ul></li></ul></li><li><strong>需求清单模板</strong>（学生分组填写）：<table tabindex="0"><thead><tr><th>功能类型</th><th>用户故事描述</th><th>技术可行性（用√/×标注）</th><th>优先级（高/中/低）</th></tr></thead><tbody><tr><td>核心功能</td><td>作为用户，我希望……</td><td>√（用坐标+列表可实现）</td><td>高</td></tr><tr><td>附加功能</td><td>作为用户，我希望……</td><td>√（用条件判断可实现）</td><td>中</td></tr></tbody></table></li></ul><h2 id="三、实践任务-分组完成选题与需求清单-25分钟" tabindex="-1">三、实践任务：分组完成选题与需求清单（25分钟） <a class="header-anchor" href="#三、实践任务-分组完成选题与需求清单-25分钟" aria-label="Permalink to &quot;三、实践任务：分组完成选题与需求清单（25分钟）&quot;">​</a></h2><h2 id="基础任务-全员完成-确定选题并填写需求清单" tabindex="-1">基础任务（全员完成）：确定选题并填写需求清单 <a class="header-anchor" href="#基础任务-全员完成-确定选题并填写需求清单" aria-label="Permalink to &quot;基础任务（全员完成）：确定选题并填写需求清单&quot;">​</a></h2><ul><li>步骤1：小组从“问题墙”或AI创意助手中选1个选题，讨论5分钟确定方向；</li><li>步骤2：用“用户故事”写出3个核心功能、2个附加功能，填入需求清单模板；</li><li>步骤3：标注每个功能的技术可行性（参考已学知识：如“数据统计”可用列表+循环，“图形显示”可用turtle或matplotlib）。</li></ul><h2 id="进阶任务-选做-初步调研技术方案" tabindex="-1">进阶任务（选做）：初步调研技术方案 <a class="header-anchor" href="#进阶任务-选做-初步调研技术方案" aria-label="Permalink to &quot;进阶任务（选做）：初步调研技术方案&quot;">​</a></h2><ul><li>针对核心功能，讨论“可能用到的Python知识或库”（如“数据存储”想到列表/字典，“界面显示”想到turtle或pygame），记录在规划本上。</li></ul><h2 id="教师支持" tabindex="-1">教师支持： <a class="header-anchor" href="#教师支持" aria-label="Permalink to &quot;教师支持：&quot;">​</a></h2><ul><li>巡回指导时用“苏格拉底提问法”引导：“这个功能用我们学过的循环能实现吗？”“如果简化一下，先做什么部分？”；</li><li>对选题过难的小组，推荐“降维方案”（如“AI图像识别”简化为“关键词匹配识别”）。</li></ul><h2 id="四、展示与互评-打磨选题与需求-10分钟" tabindex="-1">四、展示与互评：打磨选题与需求（10分钟） <a class="header-anchor" href="#四、展示与互评-打磨选题与需求-10分钟" aria-label="Permalink to &quot;四、展示与互评：打磨选题与需求（10分钟）&quot;">​</a></h2><ol><li><strong>小组快展示</strong>：每组派1人用1分钟介绍选题和核心功能（用需求清单投影）；</li><li><strong>“可行性投票”</strong>：全班用手势（👍可行/🤔需调整）反馈，教师记录高频问题（如“功能太多”“技术不匹配”）；</li><li><strong>教师点评</strong>：重点指出“需求与技术的匹配度”（如“想做‘语音控制’但没学过相关库，建议改为‘文字输入控制’”）。</li></ol><h2 id="五、总结与作业-5分钟" tabindex="-1">五、总结与作业（5分钟） <a class="header-anchor" href="#五、总结与作业-5分钟" aria-label="Permalink to &quot;五、总结与作业（5分钟）&quot;">​</a></h2><h2 id="课堂总结" tabindex="-1">课堂总结： <a class="header-anchor" href="#课堂总结" aria-label="Permalink to &quot;课堂总结：&quot;">​</a></h2><ul><li>好项目的三个标准：可行、关联、创新；</li><li>需求分析=用“用户故事”列功能清单，标注可行性和优先级；</li><li>下一步：将需求拆成可执行的“模块”。</li></ul><h2 id="课后作业" tabindex="-1">课后作业： <a class="header-anchor" href="#课后作业" aria-label="Permalink to &quot;课后作业：&quot;">​</a></h2><ol><li>完善需求清单，补充1个“创新功能”（如导航系统加“预计耗时”计算）；</li><li>每组拍一张“与项目相关的生活场景照片”（如做校园导航的拍教学楼照片），下次课分享。</li></ol><h2 id="教学理论支撑" tabindex="-1">教学理论支撑： <a class="header-anchor" href="#教学理论支撑" aria-label="Permalink to &quot;教学理论支撑：&quot;">​</a></h2><ol><li><strong>维果茨基最近发展区理论</strong>：通过“选题参考卡”“需求模板”“AI创意助手”搭建脚手架，帮助学生在现有能力（编程知识）与潜在能力（项目规划）之间建立桥梁。</li><li><strong>自我决定理论</strong>：允许学生自主选题、定义功能，满足“自主性”需求；通过可行性分析让学生感知“自己能完成”，增强“胜任感”，激发内在动机。</li><li><strong>STEAM教育整合</strong>：选题环节融合“科学（问题发现）、技术（编程实现）、工程（需求分析）、艺术（用户体验）、数学（可行性评估）”，培养跨学科思维。</li></ol><hr><h1 id="综合项目规划-二-从-需求清单-到-模块蓝图" tabindex="-1">综合项目规划（二）：从“需求清单”到“模块蓝图” <a class="header-anchor" href="#综合项目规划-二-从-需求清单-到-模块蓝图" aria-label="Permalink to &quot;综合项目规划（二）：从“需求清单”到“模块蓝图”&quot;">​</a></h1><h2 id="课题-1" tabindex="-1">课题 <a class="header-anchor" href="#课题-1" aria-label="Permalink to &quot;课题&quot;">​</a></h2><p>项目模块拆解与任务分工——让团队高效协作的关键</p><h2 id="教学时间-1" tabindex="-1">教学时间 <a class="header-anchor" href="#教学时间-1" aria-label="Permalink to &quot;教学时间&quot;">​</a></h2><p>2课时（90分钟）</p><h2 id="课前准备-1" tabindex="-1">课前准备 <a class="header-anchor" href="#课前准备-1" aria-label="Permalink to &quot;课前准备&quot;">​</a></h2><ul><li><strong>教师端</strong>：电脑、投影仪、多媒体课件（含“模块拆解案例”：将“校园导航”拆分为“数据存储模块”“路径计算模块”“图形显示模块”）、模块拆解工具（思维导图模板、WBS工作分解结构图）、任务分工表模板（含角色：代码师、测试员、文档员）、计时器（控制讨论时间）。</li><li><strong>学生端</strong>：分组座位、上节课完成的“需求清单”、项目规划本、彩色笔（用于标注模块关系）、便签纸（写个人任务）。</li><li><strong>教学素材</strong>：模块-技术对应表（如“数据存储→列表/字典”“图形显示→turtle/matplotlib”）、协作问题锦囊（如“任务不均怎么办”“意见不合怎么办”）。</li></ul><h2 id="一、导入活动-从-大任务-到-小步骤-——体验拆解的魅力-15分钟" tabindex="-1">一、导入活动：从“大任务”到“小步骤”——体验拆解的魅力（15分钟） <a class="header-anchor" href="#一、导入活动-从-大任务-到-小步骤-——体验拆解的魅力-15分钟" aria-label="Permalink to &quot;一、导入活动：从“大任务”到“小步骤”——体验拆解的魅力（15分钟）&quot;">​</a></h2><h2 id="活动1-组装玩具车-拆解游戏" tabindex="-1">活动1：“组装玩具车”拆解游戏 <a class="header-anchor" href="#活动1-组装玩具车-拆解游戏" aria-label="Permalink to &quot;活动1：“组装玩具车”拆解游戏&quot;">​</a></h2><ul><li>展示未组装的玩具车和说明书，提问：“如果直接上手拼，可能会遇到什么问题？”（引导回答：步骤混乱、漏装零件）。</li><li>分组讨论：将“组装玩具车”拆成3个步骤（如“装底盘→装车轮→装车身”），用序号标注顺序，派代表说明理由。</li></ul><h2 id="活动2-编程项目类比" tabindex="-1">活动2：编程项目类比 <a class="header-anchor" href="#活动2-编程项目类比" aria-label="Permalink to &quot;活动2：编程项目类比&quot;">​</a></h2><ul><li>教师总结：“组装玩具车需要拆步骤，编程项目也需要拆成‘模块’——每个模块负责一个功能，最后像拼积木一样组合起来”。</li><li>展示“校园导航系统”模块图：<div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span>校园导航系统  </span></span>
<span class="line"><span>├─ 数据存储模块（存教室坐标、路线规则）  </span></span>
<span class="line"><span>├─ 路径计算模块（根据起点终点算路线）  </span></span>
<span class="line"><span>└─ 图形显示模块（用turtle画路线图）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li>提问：“每个模块对应之前的哪个需求？”（如“数据存储模块”对应“输入班级号显示位置”）。</li></ul><h2 id="二、知识点讲解-模块拆解与任务分工-30分钟" tabindex="-1">二、知识点讲解：模块拆解与任务分工（30分钟） <a class="header-anchor" href="#二、知识点讲解-模块拆解与任务分工-30分钟" aria-label="Permalink to &quot;二、知识点讲解：模块拆解与任务分工（30分钟）&quot;">​</a></h2><h2 id="模块1-如何拆解模块-20分钟" tabindex="-1">模块1：如何拆解模块？（20分钟） <a class="header-anchor" href="#模块1-如何拆解模块-20分钟" aria-label="Permalink to &quot;模块1：如何拆解模块？（20分钟）&quot;">​</a></h2><ul><li><strong>定义</strong>：模块是“实现一个独立功能的代码集合”，如“数据输入模块”“计算模块”“输出模块”。</li><li><strong>拆解方法</strong>： <ol><li><strong>按功能拆</strong>：从需求清单中提取核心功能，每个功能对应一个模块（如“用户输入起点”→“输入模块”，“计算路径”→“计算模块”）；</li><li><strong>按流程拆</strong>：按“输入→处理→输出”的顺序拆解（如“接收用户输入→处理数据→显示结果”）；</li><li><strong>避免两种错误</strong>： <ul><li>模块太大（一个模块做太多事，如“既存数据又算路径”）；</li><li>模块太碎（拆成“定义变量”“打印文字”等过细步骤）。</li></ul></li></ol></li><li><strong>工具演示</strong>：用思维导图拆解“垃圾分类识别工具”：<div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span>垃圾分类识别工具  </span></span>
<span class="line"><span>├─ 输入模块：接收用户输入的垃圾名称（如“塑料瓶”）  </span></span>
<span class="line"><span>├─ 匹配模块：将名称与分类规则（列表存储）比对  </span></span>
<span class="line"><span>└─ 输出模块：显示分类结果（如“可回收物”）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ul><h2 id="模块2-团队任务分工-10分钟" tabindex="-1">模块2：团队任务分工（10分钟） <a class="header-anchor" href="#模块2-团队任务分工-10分钟" aria-label="Permalink to &quot;模块2：团队任务分工（10分钟）&quot;">​</a></h2><ul><li><strong>角色与职责</strong>（每组4-5人，可兼任）： <ul><li>代码师：编写模块代码（2-3人，每人负责1-2个模块）；</li><li>测试员：运行代码找bug，记录错误（1人）；</li><li>文档员：写模块说明（如“输入模块需要用户输入字符串”），拍摄开发过程（1人）。</li></ul></li><li><strong>分工原则</strong>：结合兴趣+平衡难度（如擅长数学的同学负责计算模块，喜欢画画的负责显示模块）。</li></ul><h2 id="三、实践任务-分组完成模块拆解与分工-30分钟" tabindex="-1">三、实践任务：分组完成模块拆解与分工（30分钟） <a class="header-anchor" href="#三、实践任务-分组完成模块拆解与分工-30分钟" aria-label="Permalink to &quot;三、实践任务：分组完成模块拆解与分工（30分钟）&quot;">​</a></h2><h2 id="基础任务-全员完成-模块拆解思维导图" tabindex="-1">基础任务（全员完成）：模块拆解思维导图 <a class="header-anchor" href="#基础任务-全员完成-模块拆解思维导图" aria-label="Permalink to &quot;基础任务（全员完成）：模块拆解思维导图&quot;">​</a></h2><ul><li>步骤1：小组根据需求清单，用“功能拆解法”拆出3-5个模块，用思维导图画出（用不同颜色标注模块之间的依赖关系，如“计算模块依赖输入模块的数据”）；</li><li>步骤2：为每个模块写“模块说明”（包含：功能、输入数据、输出结果、可能用到的技术），示例：<table tabindex="0"><thead><tr><th>模块名称</th><th>功能</th><th>输入</th><th>输出</th><th>技术参考</th></tr></thead><tbody><tr><td>输入模块</td><td>接收用户输入的班级号</td><td>字符串（如“三年级2班”）</td><td>班级坐标（如(3,5)）</td><td>input()函数、字典（存储班级-坐标对应关系）</td></tr></tbody></table></li></ul><h2 id="进阶任务-选做-制定模块接口" tabindex="-1">进阶任务（选做）：制定模块接口 <a class="header-anchor" href="#进阶任务-选做-制定模块接口" aria-label="Permalink to &quot;进阶任务（选做）：制定模块接口&quot;">​</a></h2><ul><li>讨论模块之间如何“传递数据”（如输入模块将坐标传给计算模块，用变量<code>class_position</code>传递），记录在“接口说明表”中。</li></ul><h2 id="教师支持-1" tabindex="-1">教师支持： <a class="header-anchor" href="#教师支持-1" aria-label="Permalink to &quot;教师支持：&quot;">​</a></h2><ul><li>提供“模块-技术对应表”，帮助学生匹配模块与已学知识；</li><li>对分工不均的小组，用“任务难度秤”工具（将模块按难度分级，确保每人任务量均衡）。</li></ul><h2 id="四、展示与优化-完善模块蓝图-10分钟" tabindex="-1">四、展示与优化：完善模块蓝图（10分钟） <a class="header-anchor" href="#四、展示与优化-完善模块蓝图-10分钟" aria-label="Permalink to &quot;四、展示与优化：完善模块蓝图（10分钟）&quot;">​</a></h2><ol><li><strong>模块图展示</strong>：每组用2分钟展示思维导图，重点说明“为什么这么拆”“模块之间的关系”；</li><li>** peer review**：其他组提问“这个模块能不能再拆小一点？”“两个模块能不能合并？”，促进优化；</li><li><strong>最终确认</strong>：教师审核模块拆解的合理性，重点检查“是否覆盖所有需求”“技术是否可行”。</li></ol><h2 id="五、总结与作业-5分钟-1" tabindex="-1">五、总结与作业（5分钟） <a class="header-anchor" href="#五、总结与作业-5分钟-1" aria-label="Permalink to &quot;五、总结与作业（5分钟）&quot;">​</a></h2><h2 id="课堂总结-1" tabindex="-1">课堂总结： <a class="header-anchor" href="#课堂总结-1" aria-label="Permalink to &quot;课堂总结：&quot;">​</a></h2><ul><li>模块拆解=按功能/流程拆分成独立代码集合，避免过大或过碎；</li><li>分工=结合兴趣分配角色（代码师、测试员、文档员），明确每个模块的负责人；</li><li>下一步：按模块编写代码，定期合并测试。</li></ul><h2 id="课后作业-1" tabindex="-1">课后作业： <a class="header-anchor" href="#课后作业-1" aria-label="Permalink to &quot;课后作业：&quot;">​</a></h2><ol><li>每个学生在任务分工表上填写自己负责的模块和具体任务（如“代码师：负责输入模块，周三前完成input()函数编写”）；</li><li>小组约定下次课的“第一次合并时间”（如先完成输入模块和数据存储模块的对接）。</li></ol><h2 id="教学理论支撑-1" tabindex="-1">教学理论支撑： <a class="header-anchor" href="#教学理论支撑-1" aria-label="Permalink to &quot;教学理论支撑：&quot;">​</a></h2><ol><li><strong>皮亚杰形式运算阶段理论</strong>：模块拆解需要抽象逻辑思维（分析功能关系、规划执行顺序），通过思维导图等可视化工具，帮助学生将抽象思维转化为具象图表。</li><li><strong>社会建构主义理论</strong>：小组讨论拆解方案、分工协作的过程，是“通过社会互动建构知识”的过程，学生在争论与妥协中理解“团队协作比个人英雄主义更重要”。</li><li><strong>STEAM工程思维</strong>：模块拆解与任务分工是工程设计中的核心环节，培养“系统思考”（整体与部分的关系）和“迭代优化”（根据反馈调整方案）能力，呼应STEAM教育的工程实践要求。</li></ol>`,67)])])}const p=l(r,[["render",n]]);export{b as __pageData,p as default};
