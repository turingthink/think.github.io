import{j as a,c as i,b as n,ag as l}from"./chunks/framework.CPnt7f93.js";const o=JSON.parse('{"title":"LED","description":"","frontmatter":{},"headers":[],"relativePath":"arduino/3.led.md","filePath":"arduino/3.led.md","lastUpdated":1761651013000}'),e={name:"arduino/3.led.md"};function p(t,s,h,r,k,d){return n(),i("div",null,[...s[0]||(s[0]=[l(`<h1 id="led" tabindex="-1">LED <a class="header-anchor" href="#led" aria-label="Permalink to &quot;LED&quot;">​</a></h1><h2 id="硬件连接" tabindex="-1">硬件连接 <a class="header-anchor" href="#硬件连接" aria-label="Permalink to &quot;硬件连接&quot;">​</a></h2><p>接线说明：<code>LED模块--&gt;ESP32</code> IO <code>D1--&gt;15</code></p><h2 id="代码实现" tabindex="-1">代码实现 <a class="header-anchor" href="#代码实现" aria-label="Permalink to &quot;代码实现&quot;">​</a></h2><ol><li>初始化 GPIO 针脚</li><li>设置 GPIO 针脚为输出模式</li></ol><details class="details custom-block"><summary>LED 代码</summary><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &lt;Arduino.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> LED_PIN</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 15</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">  pinMode</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(LED_PIN, OUTPUT); </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> loop</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">  digitalWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(LED_PIN, LOW);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">  delay</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">  digitalWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(LED_PIN, HIGH);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">  delay</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div></details>`,6)])])}const b=a(e,[["render",p]]);export{o as __pageData,b as default};
