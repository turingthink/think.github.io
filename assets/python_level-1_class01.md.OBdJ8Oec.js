import{j as s,c as a,b as n,ag as t}from"./chunks/framework.CPnt7f93.js";const c=JSON.parse('{"title":"编程是什么？——Python初体验与print函数应用","description":"","frontmatter":{},"headers":[],"relativePath":"python/level-1/class01.md","filePath":"python/level-1/class01.md","lastUpdated":1761651013000}'),l={name:"python/level-1/class01.md"};function e(h,i,r,p,o,k){return n(),a("div",null,[...i[0]||(i[0]=[t(`<h1 id="编程是什么-——python初体验与print函数应用" tabindex="-1">编程是什么？——Python初体验与print函数应用 <a class="header-anchor" href="#编程是什么-——python初体验与print函数应用" aria-label="Permalink to &quot;编程是什么？——Python初体验与print函数应用&quot;">​</a></h1><h2 id="课题" tabindex="-1">课题 <a class="header-anchor" href="#课题" aria-label="Permalink to &quot;课题&quot;">​</a></h2><p>编程的“指令世界”与Python的“第一句话”</p><h2 id="教学时间" tabindex="-1">教学时间 <a class="header-anchor" href="#教学时间" aria-label="Permalink to &quot;教学时间&quot;">​</a></h2><p>2课时（90分钟）</p><h2 id="课前准备" tabindex="-1">课前准备 <a class="header-anchor" href="#课前准备" aria-label="Permalink to &quot;课前准备&quot;">​</a></h2><ul><li><strong>教师端</strong>：电脑（Python 3.10+）、投影仪、多媒体课件（含生活编程案例视频：如智能音箱响应指令、游戏角色移动）、实物道具（智能手机、乐高积木）、“指令卡片”（写有“打开灯”“前进3步”等）。</li><li><strong>学生端</strong>：电脑（Python环境）、笔记本、马克笔（标注重点）、姓名贴（用于个性化代码）。</li><li><strong>教学素材</strong>：代码模板（提前发放）、奖励贴纸（“指令小达人”“创意输出奖”）、AI代码小助手（简化版LangChain工具）。</li></ul><h2 id="一、导入活动-从-生活指令-到-代码指令-15分钟" tabindex="-1">一、导入活动：从“生活指令”到“代码指令”（15分钟） <a class="header-anchor" href="#一、导入活动-从-生活指令-到-代码指令-15分钟" aria-label="Permalink to &quot;一、导入活动：从“生活指令”到“代码指令”（15分钟）&quot;">​</a></h2><h2 id="活动1-指令接龙-游戏——理解-指令-结果-逻辑" tabindex="-1">活动1：“指令接龙”游戏——理解“指令-结果”逻辑 <a class="header-anchor" href="#活动1-指令接龙-游戏——理解-指令-结果-逻辑" aria-label="Permalink to &quot;活动1：“指令接龙”游戏——理解“指令-结果”逻辑&quot;">​</a></h2><ul><li>教师说“指令”，学生做动作：“举起右手”→学生举手；“向前走2步”→学生迈步。</li><li>提问：“如果指令是‘举起左手3次’，怎么做？”引导发现“指令需要明确‘动作’和‘次数’”。</li><li>类比：“计算机和人一样，也需要明确的指令才能工作——编程就是写这样的指令”。</li></ul><h2 id="活动2-乐高拼房子-——感知-代码模块化" tabindex="-1">活动2：“乐高拼房子”——感知“代码模块化” <a class="header-anchor" href="#活动2-乐高拼房子-——感知-代码模块化" aria-label="Permalink to &quot;活动2：“乐高拼房子”——感知“代码模块化”&quot;">​</a></h2><ul><li>展示乐高积木：“每块积木是一个小指令，按顺序拼起来就能完成‘房子’这个大任务——代码也是由一行行小指令组成的”。</li><li>播放短视频：智能手机APP（如计算器）的功能背后，是千万行代码指令在运行。</li></ul><h2 id="二、知识点讲解-认识python与print函数-30分钟" tabindex="-1">二、知识点讲解：认识Python与print函数（30分钟） <a class="header-anchor" href="#二、知识点讲解-认识python与print函数-30分钟" aria-label="Permalink to &quot;二、知识点讲解：认识Python与print函数（30分钟）&quot;">​</a></h2><h2 id="模块1-python是什么-10分钟" tabindex="-1">模块1：Python是什么？（10分钟） <a class="header-anchor" href="#模块1-python是什么-10分钟" aria-label="Permalink to &quot;模块1：Python是什么？（10分钟）&quot;">​</a></h2><ul><li><strong>核心概念</strong>：Python是一种“计算机能懂的语言”，优点是“简单像英语”（举例：<code>print(&quot;你好&quot;)</code>比其他语言更易读）。</li><li><strong>应用场景</strong>：用思维导图展示——游戏开发（如《我的世界》插件）、数据分析（疫情数据统计）、AI助手（如语音对话），让学生感知“编程就在身边”。</li><li><strong>对比Scratch</strong>：Scratch用积木拼指令（图形化），Python用文字写指令（更灵活，能做更复杂的事）。</li></ul><h2 id="模块2-print-——让计算机-说话-的指令-20分钟" tabindex="-1">模块2：print()——让计算机“说话”的指令（20分钟） <a class="header-anchor" href="#模块2-print-——让计算机-说话-的指令-20分钟" aria-label="Permalink to &quot;模块2：print()——让计算机“说话”的指令（20分钟）&quot;">​</a></h2><ul><li><strong>比喻</strong>：<code>print()</code>就像“计算机的麦克风”，括号里的内容就是它说的话。</li><li><strong>基础用法</strong>（结合代码演示）：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 示例1：输出固定文本（用英文引号包裹）</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;你好，Python！&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输出：你好，Python！</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 示例2：输出个性化内容（用变量+ f-string）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">name </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;小明&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 变量：存储名字的“盒子”</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;大家好，我是</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">name</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">，今天学编程！&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输出：大家好，我是小明，今天学编程！</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><strong>关键规则</strong>： <ol><li>文本必须用英文引号（单引号/双引号均可，如<code>print(&#39;Hi&#39;)</code>也可以）；</li><li>变量拼接用<code>f&quot;{变量名}&quot;</code>（<code>f</code>是“格式化”的意思，让变量和文字融合）；</li><li>换行输出：多个<code>print()</code>按顺序执行，自动换行（如拼图形）：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;  /|  &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot; / |  &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;/__|__&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输出一个简易三角形</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ol></li></ul><h2 id="三、练习题设计-分层任务-创意表达-25分钟" tabindex="-1">三、练习题设计：分层任务+创意表达（25分钟） <a class="header-anchor" href="#三、练习题设计-分层任务-创意表达-25分钟" aria-label="Permalink to &quot;三、练习题设计：分层任务+创意表达（25分钟）&quot;">​</a></h2><h2 id="基础任务-全员完成-我的专属签名" tabindex="-1">基础任务（全员完成）：“我的专属签名” <a class="header-anchor" href="#基础任务-全员完成-我的专属签名" aria-label="Permalink to &quot;基础任务（全员完成）：“我的专属签名”&quot;">​</a></h2><ul><li>要求：用<code>print()</code>输出包含自己姓名、爱好的句子，必须用变量存储姓名（如<code>my_name = &quot;小红&quot;</code>）。</li><li>示例框架：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">my_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;______&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 填写自己的名字</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">my_hobby </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;______&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 填写爱好</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;✨ 我是</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">my_name</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">，喜欢</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">my_hobby</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">，今天开始学Python啦！✨&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul><h2 id="进阶任务-选做-代码小画家" tabindex="-1">进阶任务（选做）：“代码小画家” <a class="header-anchor" href="#进阶任务-选做-代码小画家" aria-label="Permalink to &quot;进阶任务（选做）：“代码小画家”&quot;">​</a></h2><ul><li>用多个<code>print()</code>拼出自己喜欢的图形（星星、笑脸、小动物等），例如：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 笑脸图形</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;^_^&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;/   </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul><h2 id="教师支持" tabindex="-1">教师支持： <a class="header-anchor" href="#教师支持" aria-label="Permalink to &quot;教师支持：&quot;">​</a></h2><ul><li>打开AI代码小助手，学生可提问“怎么让文字居中？”“怎么打星星符号？”，AI生成参考代码（如用空格调整位置），降低挫折感。</li></ul><h2 id="四、讲解与互评-从-输出-到-理解-15分钟" tabindex="-1">四、讲解与互评：从“输出”到“理解”（15分钟） <a class="header-anchor" href="#四、讲解与互评-从-输出-到-理解-15分钟" aria-label="Permalink to &quot;四、讲解与互评：从“输出”到“理解”（15分钟）&quot;">​</a></h2><ol><li><strong>学生展示</strong>：随机选3名学生投屏代码，讲解“你的代码让计算机说了什么？”“变量改了会怎样？”。 <ul><li>点评重点：是否用英文引号（纠正中文引号错误）、变量名是否清晰（如<code>my_name</code>比<code>a</code>更好）。</li></ul></li><li><strong>创意互评</strong>：每组选1份“最有创意的输出”（如带emoji的签名、独特图形），贴“创意之星”贴纸，理由写在便利贴上。</li></ol><h2 id="五、总结与作业-5分钟" tabindex="-1">五、总结与作业（5分钟） <a class="header-anchor" href="#五、总结与作业-5分钟" aria-label="Permalink to &quot;五、总结与作业（5分钟）&quot;">​</a></h2><h2 id="课堂总结" tabindex="-1">课堂总结： <a class="header-anchor" href="#课堂总结" aria-label="Permalink to &quot;课堂总结：&quot;">​</a></h2><ul><li>编程=给计算机发指令；</li><li><code>print()</code>是让计算机“说话”的指令，格式：<code>print(&quot;内容&quot;)</code>或<code>print(f&quot;{变量}&quot;)</code>；</li><li>变量=存储数据的“盒子”（如<code>name = &quot;小明&quot;</code>）。</li></ul><h2 id="课后作业" tabindex="-1">课后作业： <a class="header-anchor" href="#课后作业" aria-label="Permalink to &quot;课后作业：&quot;">​</a></h2><ol><li>用<code>print()</code>给家人写一句代码祝福（如<code>print(&quot;妈妈，您做的饭最好吃！❤️&quot;)</code>），下次课分享；</li><li>尝试用<code>print()</code>拼出家人的生肖图案（如小狗、小兔）。</li></ol><h2 id="教学理论支撑" tabindex="-1">教学理论支撑： <a class="header-anchor" href="#教学理论支撑" aria-label="Permalink to &quot;教学理论支撑：&quot;">​</a></h2><ol><li><strong>皮亚杰形式运算阶段理论</strong>：通过“指令接龙”“乐高积木”等具象活动，帮助学生从具体形象思维过渡到抽象逻辑思维（理解“代码=指令”）。</li><li><strong>维果茨基最近发展区</strong>：AI代码小助手作为“脚手架”，帮助学生解决符号输入、格式错误等问题，实现“现有能力→潜在能力”的跨越。</li><li><strong>STEAM教育融合</strong>：结合技术（Python工具）、艺术（图形创作）、语言（文本表达），让编程成为跨学科表达的载体。</li></ol>`,33)])])}const u=s(l,[["render",e]]);export{c as __pageData,u as default};
