import{j as i,c as a,b as n,ag as l}from"./chunks/framework.CPnt7f93.js";const c=JSON.parse('{"title":"字符串的“魔法变身”——文本加密与解密工具","description":"","frontmatter":{},"headers":[],"relativePath":"python/level-2/class10.md","filePath":"python/level-2/class10.md","lastUpdated":1761651013000}'),e={name:"python/level-2/class10.md"};function h(t,s,p,k,r,d){return n(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="字符串的-魔法变身-——文本加密与解密工具" tabindex="-1">字符串的“魔法变身”——文本加密与解密工具 <a class="header-anchor" href="#字符串的-魔法变身-——文本加密与解密工具" aria-label="Permalink to &quot;字符串的“魔法变身”——文本加密与解密工具&quot;">​</a></h1><h2 id="课题" tabindex="-1">课题 <a class="header-anchor" href="#课题" aria-label="Permalink to &quot;课题&quot;">​</a></h2><p>字符串的“拆分与替换”：用Python实现简易密码加密器</p><h2 id="教学时间" tabindex="-1">教学时间 <a class="header-anchor" href="#教学时间" aria-label="Permalink to &quot;教学时间&quot;">​</a></h2><p>2课时（90分钟）</p><h2 id="课前准备" tabindex="-1">课前准备 <a class="header-anchor" href="#课前准备" aria-label="Permalink to &quot;课前准备&quot;">​</a></h2><ul><li><strong>教师端</strong>：电脑（Python 3.10+）、投影仪、多媒体课件（含凯撒密码历史动画、生活加密场景图：如手机密码、快递单信息遮挡）、实物道具（字母卡片A-Z、密码本模板）、“加密任务卡”（写有明文与密文对应示例）。</li><li><strong>学生端</strong>：电脑（Python环境）、笔记本、双色笔（标注代码逻辑）、加密练习纸（提前打印明文句子）。</li><li><strong>教学素材</strong>：代码模板（字符串操作基础框架）、奖励徽章（“加密小能手”“逻辑拆解王”）、AI代码小助手（可生成字符串处理示例代码）。</li></ul><h2 id="一、导入活动-从-秘密信件-到-代码加密-15分钟" tabindex="-1">一、导入活动：从“秘密信件”到“代码加密”（15分钟） <a class="header-anchor" href="#一、导入活动-从-秘密信件-到-代码加密-15分钟" aria-label="Permalink to &quot;一、导入活动：从“秘密信件”到“代码加密”（15分钟）&quot;">​</a></h2><h2 id="活动1-破译密码-游戏——感知加密逻辑" tabindex="-1">活动1：“破译密码”游戏——感知加密逻辑 <a class="header-anchor" href="#活动1-破译密码-游戏——感知加密逻辑" aria-label="Permalink to &quot;活动1：“破译密码”游戏——感知加密逻辑&quot;">​</a></h2><ul><li>展示凯撒密码历史故事（动画片段）：“古罗马凯撒用‘字母后移3位’传递军事秘密，A→D，B→E……”</li><li>发放字母卡片，分组挑战：已知密文“Khoor”，提示“后移3位”，让学生破译明文（答案：“Hello”）。</li><li>提问：“如果后移2位，‘A’会变成什么？”引导发现“加密=有规律的字符转换”。</li></ul><h2 id="活动2-生活中的加密场景——建立意义联结" tabindex="-1">活动2：生活中的加密场景——建立意义联结 <a class="header-anchor" href="#活动2-生活中的加密场景——建立意义联结" aria-label="Permalink to &quot;活动2：生活中的加密场景——建立意义联结&quot;">​</a></h2><ul><li>展示图片：手机解锁密码（数字加密）、快递单上的“*”（遮挡部分姓名）、聊天软件的“加密对话”。</li><li>讨论：“为什么需要加密？”（保护隐私、信息安全），引出课题：“今天用Python让文字‘变身’，制作自己的加密工具”。</li></ul><h2 id="二、知识点讲解-字符串操作与加密算法-30分钟" tabindex="-1">二、知识点讲解：字符串操作与加密算法（30分钟） <a class="header-anchor" href="#二、知识点讲解-字符串操作与加密算法-30分钟" aria-label="Permalink to &quot;二、知识点讲解：字符串操作与加密算法（30分钟）&quot;">​</a></h2><h2 id="模块1-字符串——-字符的项链-10分钟" tabindex="-1">模块1：字符串——“字符的项链”（10分钟） <a class="header-anchor" href="#模块1-字符串——-字符的项链-10分钟" aria-label="Permalink to &quot;模块1：字符串——“字符的项链”（10分钟）&quot;">​</a></h2><ul><li><strong>核心概念</strong>：字符串是用引号包裹的字符序列（如<code>&quot;Hello&quot;</code>），像“穿在一起的珠子项链”，每个字符有固定位置（索引从0开始）。</li><li><strong>基础操作演示</strong>：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 示例1：查看字符串长度（有多少颗“珠子”）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">text </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;Python&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">len</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(text))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输出：6（共6个字符）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 示例2：字符串索引（找到第n颗“珠子”）</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(text[</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">])  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输出：P（第1个字符，索引0）</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(text[</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">])  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输出：t（第3个字符，索引2）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li><li><strong>关键规则</strong>：字符串索引从0开始（与生活中“第1个”差1），可通过<code>[索引]</code>精准获取字符。</li></ul><h2 id="模块2-字符串的-拆分与替换-——-拆项链-与-换珠子-10分钟" tabindex="-1">模块2：字符串的“拆分与替换”——“拆项链”与“换珠子”（10分钟） <a class="header-anchor" href="#模块2-字符串的-拆分与替换-——-拆项链-与-换珠子-10分钟" aria-label="Permalink to &quot;模块2：字符串的“拆分与替换”——“拆项链”与“换珠子”（10分钟）&quot;">​</a></h2><ul><li><strong>比喻</strong>：<code>split()</code>像“按规律拆项链”（按指定符号分割字符串），<code>replace()</code>像“替换珠子”（把某字符换成另一字符）。</li><li><strong>代码示例</strong>：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 示例1：split()——按空格拆分句子为单词</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">sentence </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;I love Python&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">words </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> sentence.split(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot; &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 按空格拆分</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(words)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输出：[&#39;I&#39;, &#39;love&#39;, &#39;Python&#39;]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 示例2：replace()——替换字符（如遮挡敏感信息）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">phone </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;13812345678&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">hidden_phone </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> phone.replace(phone[</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">], </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;****&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 替换中间4位为*</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(hidden_phone)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输出：138****5678</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li></ul><h2 id="模块3-凯撒加密算法——-字符的位移魔法-10分钟" tabindex="-1">模块3：凯撒加密算法——“字符的位移魔法”（10分钟） <a class="header-anchor" href="#模块3-凯撒加密算法——-字符的位移魔法-10分钟" aria-label="Permalink to &quot;模块3：凯撒加密算法——“字符的位移魔法”（10分钟）&quot;">​</a></h2><ul><li><strong>核心逻辑</strong>：通过<code>ord()</code>（字符转ASCII码）和<code>chr()</code>（ASCII码转字符）实现字母位移，公式： <ul><li>加密：<code>密文ASCII = (明文ASCII - 基准ASCII + 偏移量) % 26 + 基准ASCII</code><br> （大写字母基准ASCII=65，小写字母=97，确保位移后仍为字母）</li></ul></li><li><strong>代码框架</strong>（以大写字母为例）：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> encrypt</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(text, shift):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    result </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> char </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> text:  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 遍历每个字符</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> char.isupper():  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 判断是否为大写字母</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # 计算加密后ASCII码：(原码-65 + 位移) %26 +65</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">            encrypted_code </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">ord</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(char) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 65</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> shift) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">%</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 26</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 65</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">            result </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> chr</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(encrypted_code)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 转成字符拼接到结果</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        else</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">            result </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> char  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 非大写字母不加密（如空格、数字）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> result</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 测试：偏移3位，加密&quot;HELLO&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(encrypt(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;HELLO&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输出：KHOOR</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></li></ul><h2 id="三、练习题设计-分层任务-加密实战-25分钟" tabindex="-1">三、练习题设计：分层任务+加密实战（25分钟） <a class="header-anchor" href="#三、练习题设计-分层任务-加密实战-25分钟" aria-label="Permalink to &quot;三、练习题设计：分层任务+加密实战（25分钟）&quot;">​</a></h2><h2 id="基础任务-全员完成-固定偏移加密器" tabindex="-1">基础任务（全员完成）：“固定偏移加密器” <a class="header-anchor" href="#基础任务-全员完成-固定偏移加密器" aria-label="Permalink to &quot;基础任务（全员完成）：“固定偏移加密器”&quot;">​</a></h2><ul><li>要求：完善上述<code>encrypt()</code>函数，支持小写字母加密（补充<code>elif char.islower()</code>逻辑），加密自己的姓名（如“Xiaoming”→偏移3位）。</li><li>示例框架（学生补充小写字母部分）：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> encrypt</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(text, shift):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    result </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> char </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> text:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> char.isupper():</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">            encrypted_code </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">ord</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(char) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 65</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> shift) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">%</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 26</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 65</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">            result </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> chr</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(encrypted_code)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 学生补充：处理小写字母（基准ASCII=97）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        elif</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> char.islower():</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">            ______  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 填写加密逻辑</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        else</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">            result </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> char</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> result</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 测试：加密自己的姓名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">my_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;______&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 填写姓名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">encrypted_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> encrypt(my_name, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;加密后的姓名：</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">encrypted_name</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div></li></ul><h2 id="进阶任务-选做-解密功能-与-自定义偏移" tabindex="-1">进阶任务（选做）：“解密功能”与“自定义偏移” <a class="header-anchor" href="#进阶任务-选做-解密功能-与-自定义偏移" aria-label="Permalink to &quot;进阶任务（选做）：“解密功能”与“自定义偏移”&quot;">​</a></h2><ul><li>要求： <ol><li>编写<code>decrypt()</code>函数（解密=加密的逆操作，偏移量取负数）；</li><li>让用户输入自定义偏移量（如<code>shift = int(input(&quot;请输入偏移量：&quot;))</code>），实现灵活加密。</li></ol></li></ul><h2 id="拓展任务-挑战-密码本-批量加密" tabindex="-1">拓展任务（挑战）：“密码本”批量加密 <a class="header-anchor" href="#拓展任务-挑战-密码本-批量加密" aria-label="Permalink to &quot;拓展任务（挑战）：“密码本”批量加密&quot;">​</a></h2><ul><li>用<code>split()</code>拆分多句明文（如<code>&quot;I like Python\\nYou too&quot;</code>），批量加密后保存到变量，模拟“秘密信件”场景。</li></ul><h2 id="教师支持" tabindex="-1">教师支持： <a class="header-anchor" href="#教师支持" aria-label="Permalink to &quot;教师支持：&quot;">​</a></h2><ul><li>打开AI代码小助手，学生可提问“小写字母加密公式是什么？”“怎么让输入的偏移量生效？”，AI生成带注释的参考代码（如小写字母加密逻辑：<code>(ord(char) - 97 + shift) % 26 + 97</code>）。</li></ul><h2 id="四、讲解与互评-从-加密-到-安全-15分钟" tabindex="-1">四、讲解与互评：从“加密”到“安全”（15分钟） <a class="header-anchor" href="#四、讲解与互评-从-加密-到-安全-15分钟" aria-label="Permalink to &quot;四、讲解与互评：从“加密”到“安全”（15分钟）&quot;">​</a></h2><ol><li><strong>学生展示</strong>：选3组投屏代码，演示“加密-解密”全流程（如加密“今天天气好”→密文→解密回原文）。 <ul><li>点评重点：是否处理大小写（逻辑完整性）、偏移量计算是否正确（<code>%26</code>防止超出字母范围）。</li></ul></li><li><strong>安全讨论</strong>：分组讨论“如果偏移量是1，加密后的密码容易被破解吗？”“怎么让加密更安全？”（引导想到“随机偏移量”“混合加密”）。</li><li><strong>互评颁奖</strong>：投票选出“最严谨加密器”（无逻辑漏洞）和“最创意加密器”（如加入符号替换），颁发对应徽章。</li></ol><h2 id="五、总结与作业-5分钟" tabindex="-1">五、总结与作业（5分钟） <a class="header-anchor" href="#五、总结与作业-5分钟" aria-label="Permalink to &quot;五、总结与作业（5分钟）&quot;">​</a></h2><h2 id="课堂总结" tabindex="-1">课堂总结： <a class="header-anchor" href="#课堂总结" aria-label="Permalink to &quot;课堂总结：&quot;">​</a></h2><ul><li>字符串是“字符项链”，可用<code>len()</code>测长度、<code>[索引]</code>取字符；</li><li><code>split()</code>拆分字符串，<code>replace()</code>替换字符，是文本处理的基础工具；</li><li>凯撒加密=字符按偏移量位移，核心是<code>ord()</code>与<code>chr()</code>的转换（ASCII码运算）。</li></ul><h2 id="课后作业" tabindex="-1">课后作业： <a class="header-anchor" href="#课后作业" aria-label="Permalink to &quot;课后作业：&quot;">​</a></h2><ol><li>给朋友发一条“加密短信”（用自己的工具加密，附偏移量），下次课分享破译过程；</li><li>尝试在加密函数中加入“符号替换”（如把“a”换成“@”，增强安全性）。</li></ol><h2 id="教学理论支撑" tabindex="-1">教学理论支撑： <a class="header-anchor" href="#教学理论支撑" aria-label="Permalink to &quot;教学理论支撑：&quot;">​</a></h2><ol><li><strong>皮亚杰形式运算阶段理论</strong>：通过“字母位移”“ASCII码计算”等抽象逻辑任务，发展学生的命题思维与演绎推理能力（从具体加密案例到通用算法）。</li><li><strong>维果茨基最近发展区</strong>：代码模板提供“半完成框架”（如预设<code>encrypt()</code>函数结构），AI助手解决具体语法问题，帮助学生在“现有能力（字符串基础）”与“潜在能力（加密算法）”间搭建脚手架。</li><li><strong>STEAM教育融合</strong>：结合技术（Python字符串操作）、数学（模运算<code>%26</code>）、社会科学（密码学历史与信息安全）、工程（工具功能迭代），让编程成为跨学科问题解决的载体。</li></ol>`,37)])])}const g=i(e,[["render",h]]);export{c as __pageData,g as default};
