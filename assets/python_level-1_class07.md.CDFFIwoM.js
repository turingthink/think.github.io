import{j as i,c as a,b as n,ag as l}from"./chunks/framework.CPnt7f93.js";const c=JSON.parse('{"title":"循环与规律创作（上）——从“重复劳动”到for循环的效率魔法","description":"","frontmatter":{},"headers":[],"relativePath":"python/level-1/class07.md","filePath":"python/level-1/class07.md","lastUpdated":1761651013000}'),e={name:"python/level-1/class07.md"};function t(h,s,r,p,k,o){return n(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="循环与规律创作-上-——从-重复劳动-到for循环的效率魔法" tabindex="-1">循环与规律创作（上）——从“重复劳动”到for循环的效率魔法 <a class="header-anchor" href="#循环与规律创作-上-——从-重复劳动-到for循环的效率魔法" aria-label="Permalink to &quot;循环与规律创作（上）——从“重复劳动”到for循环的效率魔法&quot;">​</a></h1><h2 id="课题" tabindex="-1">课题 <a class="header-anchor" href="#课题" aria-label="Permalink to &quot;课题&quot;">​</a></h2><p>用for循环解锁“重复图案”的密码</p><h2 id="教学时间" tabindex="-1">教学时间 <a class="header-anchor" href="#教学时间" aria-label="Permalink to &quot;教学时间&quot;">​</a></h2><p>2课时（90分钟）</p><h2 id="课前准备" tabindex="-1">课前准备 <a class="header-anchor" href="#课前准备" aria-label="Permalink to &quot;课前准备&quot;">​</a></h2><ul><li><strong>教师端</strong>：电脑（Python 3.10+）、投影仪、多媒体课件（含生活中重复图案视频：瓷砖铺贴、蜂巢结构、音乐节拍）、实物道具（带重复花纹的围巾、六边形积木）、“循环指令卡”（写有“画5个圆”“走3步右转”等）。</li><li><strong>学生端</strong>：电脑（Python环境，预装turtle库）、坐标纸、彩色笔（绘制图案草稿）、笔记本（记录循环规律）。</li><li><strong>教学素材</strong>：代码模板（含基础循环框架）、分层任务单（基础/进阶）、“规律发现者”勋章、AI代码小助手（可生成循环绘图示例）。</li></ul><h2 id="一、导入活动-从-重复的智慧-到循环逻辑-15分钟" tabindex="-1">一、导入活动：从“重复的智慧”到循环逻辑（15分钟） <a class="header-anchor" href="#一、导入活动-从-重复的智慧-到循环逻辑-15分钟" aria-label="Permalink to &quot;一、导入活动：从“重复的智慧”到循环逻辑（15分钟）&quot;">​</a></h2><h2 id="活动1-手动画10个圆-——体验重复的低效" tabindex="-1">活动1：“手动画10个圆”——体验重复的低效 <a class="header-anchor" href="#活动1-手动画10个圆-——体验重复的低效" aria-label="Permalink to &quot;活动1：“手动画10个圆”——体验重复的低效&quot;">​</a></h2><ul><li>任务：让学生在坐标纸上用圆规画10个大小相同、间隔相等的圆，计时1分钟。</li><li>提问：“画到第5个时有没有觉得麻烦？如果要画100个，怎么办？”引导发现“重复劳动需要更高效的方法”。</li></ul><h2 id="活动2-找规律猜图形-——感知循环的本质" tabindex="-1">活动2：“找规律猜图形”——感知循环的本质 <a class="header-anchor" href="#活动2-找规律猜图形-——感知循环的本质" aria-label="Permalink to &quot;活动2：“找规律猜图形”——感知循环的本质&quot;">​</a></h2><ul><li>展示图片：①瓷砖按“方-圆-方-圆”排列；②蜂巢的六边形重复结构；③音乐简谱“do-re-mi-do-re-mi”。</li><li>小组讨论：“这些图案/声音有什么共同点？”（核心：<strong>重复出现的单元+次数</strong>）。</li><li>类比：“计算机处理重复任务时，用‘循环’指令——就像给瓷砖工人一张‘每30cm贴1块方砖’的纸条，不用每次单独说”。</li></ul><h2 id="二、知识点讲解-for循环基础与turtle绘图应用-30分钟" tabindex="-1">二、知识点讲解：for循环基础与turtle绘图应用（30分钟） <a class="header-anchor" href="#二、知识点讲解-for循环基础与turtle绘图应用-30分钟" aria-label="Permalink to &quot;二、知识点讲解：for循环基础与turtle绘图应用（30分钟）&quot;">​</a></h2><h2 id="模块1-认识for循环——-重复做n次-的指令-12分钟" tabindex="-1">模块1：认识for循环——“重复做n次”的指令（12分钟） <a class="header-anchor" href="#模块1-认识for循环——-重复做n次-的指令-12分钟" aria-label="Permalink to &quot;模块1：认识for循环——“重复做n次”的指令（12分钟）&quot;">​</a></h2><ul><li><strong>核心概念</strong>：for循环是“让一段代码重复执行指定次数”的语法，格式：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> 变量 </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(次数):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    重复执行的代码（注意缩进！）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><strong>生活类比</strong>： <ul><li>“for i in range(5): 跑步” → 相当于“跑5圈”（i是圈数计数器，从0到4）；</li><li>缩进的作用：“被缩进的代码”才是循环体内要重复的内容（用“给工人的纸条上画框的内容”比喻）。</li></ul></li></ul><h2 id="模块2-用for循环绘制重复图形-18分钟" tabindex="-1">模块2：用for循环绘制重复图形（18分钟） <a class="header-anchor" href="#模块2-用for循环绘制重复图形-18分钟" aria-label="Permalink to &quot;模块2：用for循环绘制重复图形（18分钟）&quot;">​</a></h2><ul><li><p><strong>案例1：画5个间隔相等的圆</strong>（结合turtle库）：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> turtle</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> turtle.Turtle()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建绘图角色</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.speed(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 放慢速度，看清过程</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 循环5次：每次画圆+移动一段距离</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.circle(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 画半径30的圆</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.penup()     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 抬笔（不画线）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.forward(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 向前移动60（圆直径，避免重叠）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.pendown()   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 落笔（准备画下一个）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">turtle.done()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 保持窗口</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ul><li>关键：<code>range(5)</code>控制次数，<code>forward(60)</code>控制间隔（数学：圆直径=2×半径）。</li></ul></li><li><p><strong>案例2：用循环画正方形（复习巩固）</strong>：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">):  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 正方形4条边</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.forward(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.right(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 右转90度（数学：正方形内角）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>对比：不用循环需要写4遍<code>forward+right</code>，循环让代码更简洁（“少写3行，少犯3次错”）。</li></ul></li></ul><h2 id="三、练习题设计-分层任务-规律应用-30分钟" tabindex="-1">三、练习题设计：分层任务+规律应用（30分钟） <a class="header-anchor" href="#三、练习题设计-分层任务-规律应用-30分钟" aria-label="Permalink to &quot;三、练习题设计：分层任务+规律应用（30分钟）&quot;">​</a></h2><h2 id="基础任务-全员完成-彩虹糖葫芦" tabindex="-1">基础任务（全员完成）：“彩虹糖葫芦” <a class="header-anchor" href="#基础任务-全员完成-彩虹糖葫芦" aria-label="Permalink to &quot;基础任务（全员完成）：“彩虹糖葫芦”&quot;">​</a></h2><ul><li>要求：用for循环画5个颜色不同的圆（红→橙→黄→绿→蓝），间隔50像素，半径20。</li><li>提示：用列表存储颜色<code>colors = [&quot;red&quot;, &quot;orange&quot;, &quot;yellow&quot;, &quot;green&quot;, &quot;blue&quot;]</code>，循环中用<code>t.color(colors[i])</code>调用。</li><li>代码框架：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> turtle</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> turtle.Turtle()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">colors </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;red&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;orange&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;yellow&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;green&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;blue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.color(colors[i])  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 第i个圆用第i种颜色</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.begin_fill()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.circle(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 半径20</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.end_fill()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.penup()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.forward(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 间隔50</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.pendown()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">turtle.done()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div></li></ul><h2 id="进阶任务-选做-旋转的星星" tabindex="-1">进阶任务（选做）：“旋转的星星” <a class="header-anchor" href="#进阶任务-选做-旋转的星星" aria-label="Permalink to &quot;进阶任务（选做）：“旋转的星星”&quot;">​</a></h2><ul><li>要求：用for循环画8个星星，每次画完后旋转45度（360÷8=45，数学：均匀分布），形成圆形图案。</li><li>支持：打开AI代码小助手，输入“用turtle画8个旋转的星星”，获取星星绘制函数<code>draw_star(size)</code>，学生补充循环逻辑。</li></ul><h2 id="教师巡视重点" tabindex="-1">教师巡视重点： <a class="header-anchor" href="#教师巡视重点" aria-label="Permalink to &quot;教师巡视重点：&quot;">​</a></h2><ul><li>纠正缩进错误（忘记缩进或缩进不一致，导致“只执行一次”）；</li><li>引导发现“次数与角度的关系”（如8个图形对应旋转360/8=45度）。</li></ul><h2 id="四、讲解与互评-从-代码-到-规律-10分钟" tabindex="-1">四、讲解与互评：从“代码”到“规律”（10分钟） <a class="header-anchor" href="#四、讲解与互评-从-代码-到-规律-10分钟" aria-label="Permalink to &quot;四、讲解与互评：从“代码”到“规律”（10分钟）&quot;">​</a></h2><ol><li><strong>问题诊断</strong>：投屏典型错误案例（如“圆重叠”——间隔太小；“颜色不变”——未用<code>colors[i]</code>），集体分析原因。</li><li><strong>规律分享</strong>：请学生说“你的循环中，重复的单元是什么？次数是多少？隐藏的数学规律是什么？”（如“每个圆间隔=2×半径，保证不重叠”）。</li><li><strong>创意评选</strong>：投票选出“最整洁的循环代码”（缩进规范）和“最有数学美感的图案”（间隔均匀），颁发勋章。</li></ol><h2 id="五、总结与作业-5分钟" tabindex="-1">五、总结与作业（5分钟） <a class="header-anchor" href="#五、总结与作业-5分钟" aria-label="Permalink to &quot;五、总结与作业（5分钟）&quot;">​</a></h2><h2 id="课堂总结" tabindex="-1">课堂总结： <a class="header-anchor" href="#课堂总结" aria-label="Permalink to &quot;课堂总结：&quot;">​</a></h2><ul><li>for循环的作用：<strong>高效执行重复任务</strong>，格式是<code>for i in range(次数): 缩进的代码</code>；</li><li>核心三要素：<strong>重复单元</strong>（循环体内的代码）、<strong>次数</strong>（<code>range(n)</code>）、<strong>变化量</strong>（如颜色、位置、角度）；</li><li>与数学的关联：间隔、角度等参数需要用除法/乘法计算（如均匀分布=360÷次数）。</li></ul><h2 id="课后作业" tabindex="-1">课后作业： <a class="header-anchor" href="#课后作业" aria-label="Permalink to &quot;课后作业：&quot;">​</a></h2><ol><li>观察家中1个重复图案（如地砖、窗帘花纹），用文字记录“重复单元”和“次数”，下次课分享；</li><li>尝试修改“彩虹糖葫芦”代码：把圆变成正方形，间隔改为60，看看会发生什么。</li></ol><h2 id="教学理论支撑" tabindex="-1">教学理论支撑： <a class="header-anchor" href="#教学理论支撑" aria-label="Permalink to &quot;教学理论支撑：&quot;">​</a></h2><ol><li><strong>皮亚杰形式运算阶段理论</strong>：通过“手动画圆”（具体操作）到“循环代码”（抽象逻辑）的过渡，培养学生对“重复规律”的形式化表达能力。</li><li><strong>维果茨基最近发展区</strong>：基础任务（固定参数）→进阶任务（角度计算）→AI助手辅助，三层支架帮助不同水平学生掌握循环逻辑。</li><li><strong>STEAM教育融合</strong>：结合数学（间隔计算、角度分配）、艺术（色彩搭配、图案对称）、工程（高效重复的逻辑设计），体现“做中学”的跨学科整合。</li></ol>`,33)])])}const g=i(e,[["render",t]]);export{c as __pageData,g as default};
