import{j as i,c as a,b as l,ag as n}from"./chunks/framework.CPnt7f93.js";const c=JSON.parse('{"title":"第二教学文案：循环与列表——数据的“智能分析”","description":"","frontmatter":{},"headers":[],"relativePath":"python/level-2/class03.md","filePath":"python/level-2/class03.md","lastUpdated":1761651013000}'),e={name:"python/level-2/class03.md"};function h(t,s,p,r,k,d){return l(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="第二教学文案-循环与列表——数据的-智能分析" tabindex="-1">第二教学文案：循环与列表——数据的“智能分析” <a class="header-anchor" href="#第二教学文案-循环与列表——数据的-智能分析" aria-label="Permalink to &quot;第二教学文案：循环与列表——数据的“智能分析”&quot;">​</a></h1><h2 id="课题" tabindex="-1">课题 <a class="header-anchor" href="#课题" aria-label="Permalink to &quot;课题&quot;">​</a></h2><p>用循环“遍历”列表——批量处理数据与统计分析</p><h2 id="教学时间" tabindex="-1">教学时间 <a class="header-anchor" href="#教学时间" aria-label="Permalink to &quot;教学时间&quot;">​</a></h2><p>2课时（90分钟）</p><h2 id="课前准备" tabindex="-1">课前准备 <a class="header-anchor" href="#课前准备" aria-label="Permalink to &quot;课前准备&quot;">​</a></h2><ul><li><strong>教师端</strong>：电脑（Python 3.10+）、投影仪、多媒体课件（含“流水线处理”动画：工人依次检查产品→类比循环遍历列表）、实物道具（标有数字的卡片若干，模拟“数据”）、白板（画表格记录手动计算过程）。</li><li><strong>学生端</strong>：电脑（Python环境）、上节课的“植物生长数据列表”、计算器（对比手动计算与代码结果）、错题本（记录循环逻辑错误）。</li><li><strong>教学素材</strong>：代码模板（for循环遍历列表示例）、“数据分析师”荣誉徽章、AI代码小助手（支持“计算平均分的代码”等查询）。</li></ul><h2 id="一、导入活动-从-手动处理-到-自动处理-15分钟" tabindex="-1">一、导入活动：从“手动处理”到“自动处理”（15分钟） <a class="header-anchor" href="#一、导入活动-从-手动处理-到-自动处理-15分钟" aria-label="Permalink to &quot;一、导入活动：从“手动处理”到“自动处理”（15分钟）&quot;">​</a></h2><h3 id="活动1-手动算平均分-挑战——感受-重复操作-的繁琐" tabindex="-1">活动1：“手动算平均分”挑战——感受“重复操作”的繁琐 <a class="header-anchor" href="#活动1-手动算平均分-挑战——感受-重复操作-的繁琐" aria-label="Permalink to &quot;活动1：“手动算平均分”挑战——感受“重复操作”的繁琐&quot;">​</a></h3><ul><li>教师给出列表：<code>scores = [85, 92, 78, 90, 88]</code>，让学生手动计算平均分（总和÷个数）。</li><li>提问：“如果有50个数据，手动计算需要多久？容易出错吗？”引导发现“重复计算需要更高效的方法”。</li></ul><h3 id="活动2-流水线工人-类比——理解循环逻辑" tabindex="-1">活动2：“流水线工人”类比——理解循环逻辑 <a class="header-anchor" href="#活动2-流水线工人-类比——理解循环逻辑" aria-label="Permalink to &quot;活动2：“流水线工人”类比——理解循环逻辑&quot;">​</a></h3><ul><li>播放动画：流水线工人依次拿起产品检查（第1个→第2个→…→最后1个），每个产品的检查动作相同。</li><li>类比：<code>for</code>循环就像“流水线”，依次取出列表中的每个数据，执行相同操作（如累加、打印）：<br> “<code>for 数据 in 列表:</code> 就像‘工人依次拿起每个产品’，缩进的代码块就是‘检查动作’”。</li></ul><h2 id="二、知识点讲解-循环遍历列表与数据统计-35分钟" tabindex="-1">二、知识点讲解：循环遍历列表与数据统计（35分钟） <a class="header-anchor" href="#二、知识点讲解-循环遍历列表与数据统计-35分钟" aria-label="Permalink to &quot;二、知识点讲解：循环遍历列表与数据统计（35分钟）&quot;">​</a></h2><h3 id="模块1-用for循环-遍历-列表——依次处理每个数据-15分钟" tabindex="-1">模块1：用for循环“遍历”列表——依次处理每个数据（15分钟） <a class="header-anchor" href="#模块1-用for循环-遍历-列表——依次处理每个数据-15分钟" aria-label="Permalink to &quot;模块1：用for循环“遍历”列表——依次处理每个数据（15分钟）&quot;">​</a></h3><ul><li><p><strong>核心语法</strong>：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 遍历列表：依次取出每个元素并打印</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">plant_heights </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> height </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> plant_heights:  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># height是“临时变量”，代表当前取出的数据</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;当天高度：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, height)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 对每个数据执行相同操作（打印）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>输出结果：<div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span>当天高度：5</span></span>
<span class="line"><span>当天高度：8</span></span>
<span class="line"><span>当天高度：12</span></span>
<span class="line"><span>当天高度：15</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ul></li><li><p><strong>关键逻辑</strong>：</p><ol><li>临时变量（如<code>height</code>）可自定义名称（建议与数据含义相关，如<code>score</code>“分数”、<code>age</code>“年龄”）；</li><li>缩进的代码块（如<code>print()</code>）会对列表中的每个数据重复执行；</li><li>遍历顺序：从第1个元素（索引0）到最后1个元素，与列表存储顺序一致。</li></ol></li></ul><h3 id="模块2-数据统计——用循环计算总和、平均分、最大值-20分钟" tabindex="-1">模块2：数据统计——用循环计算总和、平均分、最大值（20分钟） <a class="header-anchor" href="#模块2-数据统计——用循环计算总和、平均分、最大值-20分钟" aria-label="Permalink to &quot;模块2：数据统计——用循环计算总和、平均分、最大值（20分钟）&quot;">​</a></h3><ul><li><p><strong>场景1：计算总和与平均分</strong>（以成绩列表为例）：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">scores </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">85</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">92</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">78</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">88</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">total </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 初始化总和为0（“空盘子”，用来装累加的分数）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> score </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> scores:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    total </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> total </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> score  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 累加每个分数（“往盘子里加菜”）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">average </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> total </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(scores)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># len(scores)获取列表长度（数据个数）</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;总分：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, total)       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输出：总分：433</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;平均分：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, average)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输出：平均分：86.6</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>重点：<code>len(列表名)</code>可自动获取数据个数，避免手动数（尤其数据量大时）。</li></ul></li><li><p><strong>场景2：查找最大值</strong>（以植物高度为例）：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">plant_heights </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">max_height </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 初始化最大值为0（“基准线”）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> height </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> plant_heights:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> height </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> max_height:  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 若当前高度超过基准线</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">        max_height </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> height  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 更新基准线为当前高度</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;最高高度：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, max_height)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输出：最高高度：15</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li></ul><h2 id="三、练习题设计-分层任务-综合分析-25分钟" tabindex="-1">三、练习题设计：分层任务+综合分析（25分钟） <a class="header-anchor" href="#三、练习题设计-分层任务-综合分析-25分钟" aria-label="Permalink to &quot;三、练习题设计：分层任务+综合分析（25分钟）&quot;">​</a></h2><h3 id="基础任务-全员完成-班级成绩分析器" tabindex="-1">基础任务（全员完成）：“班级成绩分析器” <a class="header-anchor" href="#基础任务-全员完成-班级成绩分析器" aria-label="Permalink to &quot;基础任务（全员完成）：“班级成绩分析器”&quot;">​</a></h3><ul><li>要求：用列表<code>class_scores = [75, 82, 90, 68, 95, 88]</code>完成： <ol><li>用循环计算总分和平均分；</li><li>用循环找出最高分；</li><li>打印结果：“总分：XXX，平均分：XXX，最高分：XXX”。</li></ol></li></ul><h3 id="进阶任务-选做-植物生长趋势分析" tabindex="-1">进阶任务（选做）：“植物生长趋势分析” <a class="header-anchor" href="#进阶任务-选做-植物生长趋势分析" aria-label="Permalink to &quot;进阶任务（选做）：“植物生长趋势分析”&quot;">​</a></h3><ul><li>结合上节课的豆芽高度列表（如<code>bean_heights = [2, 4, 7, 10, 13, 16]</code>），完成： <ol><li>计算每天的生长量（当天高度 - 前一天高度），用循环打印（如“第2天生长了2厘米”）；</li><li>计算平均每天生长量（总生长量÷天数）；</li><li>用一句话描述趋势（如“生长速度稳定，平均每天长3厘米”）。</li></ol></li></ul><h3 id="挑战任务-拓展-异常数据排查" tabindex="-1">挑战任务（拓展）：“异常数据排查” <a class="header-anchor" href="#挑战任务-拓展-异常数据排查" aria-label="Permalink to &quot;挑战任务（拓展）：“异常数据排查”&quot;">​</a></h3><ul><li>列表<code>temp = [22, 25, 30, 100, 26]</code>（某周气温，单位℃），用循环找出“异常值”（超过40℃）并打印提示：“第X天温度异常：100℃”。</li></ul><h3 id="教师支持" tabindex="-1">教师支持： <a class="header-anchor" href="#教师支持" aria-label="Permalink to &quot;教师支持：&quot;">​</a></h3><ul><li>AI代码小助手生成“计算平均分”的分步代码（带注释），学生可对比自己的代码找差异；</li><li>提供“循环逻辑流程图”（用方框和箭头展示“初始化→循环累加→计算结果”步骤）。</li></ul><h2 id="四、讲解与互评-从-代码-到-思维-10分钟" tabindex="-1">四、讲解与互评：从“代码”到“思维”（10分钟） <a class="header-anchor" href="#四、讲解与互评-从-代码-到-思维-10分钟" aria-label="Permalink to &quot;四、讲解与互评：从“代码”到“思维”（10分钟）&quot;">​</a></h2><ol><li><p><strong>典型案例分析</strong>：</p><ul><li>展示1份正确代码：点评<code>len()</code>的使用（避免手动输入个数）、临时变量命名（如<code>total</code>比<code>a</code>更清晰）；</li><li>展示1份错误代码（如忘记初始化<code>total=0</code>导致结果错误）：引导学生用“代入法”排查（手动模拟循环第1步、第2步的变量值）。</li></ul></li><li><p><strong>小组汇报</strong>：进阶任务小组分享“植物生长分析结果”，对比代码计算与手动计算的一致性，讨论“如果数据有100个，代码的优势是什么？”。</p></li></ol><h2 id="五、总结与作业-5分钟" tabindex="-1">五、总结与作业（5分钟） <a class="header-anchor" href="#五、总结与作业-5分钟" aria-label="Permalink to &quot;五、总结与作业（5分钟）&quot;">​</a></h2><h3 id="课堂总结" tabindex="-1">课堂总结： <a class="header-anchor" href="#课堂总结" aria-label="Permalink to &quot;课堂总结：&quot;">​</a></h3><ul><li><code>for 变量 in 列表:</code> 可依次处理每个数据，避免重复代码；</li><li>数据统计三步骤：初始化变量（如<code>total=0</code>）→循环累加/比较→计算结果（如平均分、最大值）；</li><li><code>len(列表名)</code>获取数据个数，是批量处理的“好帮手”。</li></ul><h3 id="课后作业" tabindex="-1">课后作业： <a class="header-anchor" href="#课后作业" aria-label="Permalink to &quot;课后作业：&quot;">​</a></h3><ol><li>用家里的水果数量列表（如<code>fruits = [5, 3, 2, 4]</code>），计算水果总数和平均每种水果的数量；</li><li>观察一周的天气温度，用列表存储并找出最高温、最低温，下节课分享分析结论。</li></ol><h2 id="教学理论支撑" tabindex="-1">教学理论支撑： <a class="header-anchor" href="#教学理论支撑" aria-label="Permalink to &quot;教学理论支撑：&quot;">​</a></h2><ol><li><strong>认知负荷理论</strong>：通过“流水线”动画降低循环逻辑的认知难度，将复杂的“批量处理”分解为“初始化→遍历→计算”三步骤，符合“小步骤”学习原则。</li><li><strong>自我决定理论</strong>：进阶任务结合学生自己记录的科学实验数据，增强任务自主性；挑战任务“异常数据排查”满足学生的胜任感需求（解决实际问题）。</li><li><strong>STEAM教育融合</strong>：结合科学（数据趋势分析）、数学（统计计算）、工程（流程化思维），让循环成为数据科学的基础工具，体现“技术服务于问题解决”的STEAM核心。</li></ol>`,35)])])}const g=i(e,[["render",h]]);export{c as __pageData,g as default};
