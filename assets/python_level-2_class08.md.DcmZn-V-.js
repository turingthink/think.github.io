import{j as i,c as a,b as n,ag as l}from"./chunks/framework.CPnt7f93.js";const c=JSON.parse('{"title":"字符串的“魔法操作”——Python字符串基础与文本处理","description":"","frontmatter":{},"headers":[],"relativePath":"python/level-2/class08.md","filePath":"python/level-2/class08.md","lastUpdated":1761651013000}'),e={name:"python/level-2/class08.md"};function t(h,s,p,r,k,o){return n(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="字符串的-魔法操作-——python字符串基础与文本处理" tabindex="-1">字符串的“魔法操作”——Python字符串基础与文本处理 <a class="header-anchor" href="#字符串的-魔法操作-——python字符串基础与文本处理" aria-label="Permalink to &quot;字符串的“魔法操作”——Python字符串基础与文本处理&quot;">​</a></h1><h2 id="课题" tabindex="-1">课题 <a class="header-anchor" href="#课题" aria-label="Permalink to &quot;课题&quot;">​</a></h2><p>字符串的“拆分与重组”：从名字处理到句子变形</p><h2 id="教学时间" tabindex="-1">教学时间 <a class="header-anchor" href="#教学时间" aria-label="Permalink to &quot;教学时间&quot;">​</a></h2><p>2课时（90分钟）</p><h2 id="课前准备" tabindex="-1">课前准备 <a class="header-anchor" href="#课前准备" aria-label="Permalink to &quot;课前准备&quot;">​</a></h2><ul><li><strong>教师端</strong>：电脑（Python 3.10+）、投影仪、多媒体课件（含“字符项链”动画：展示字符串像珠子串成的项链）、实物道具（字母卡片、带编号的珠子串）、字符串操作流程图（索引、切片、替换）。</li><li><strong>学生端</strong>：电脑（Python环境）、笔记本、练习纸（印有名字拆分练习）、彩色笔（标注字符串操作步骤）。</li><li><strong>教学素材</strong>：代码模板（<code>name_processing.py</code>）、“字符串小侦探”任务卡（含不同难度的文本处理问题）、AI代码小助手（可解答“如何提取姓氏”等问题）。</li></ul><h2 id="一、导入活动-从-字符游戏-到-字符串逻辑-15分钟" tabindex="-1">一、导入活动：从“字符游戏”到“字符串逻辑”（15分钟） <a class="header-anchor" href="#一、导入活动-从-字符游戏-到-字符串逻辑-15分钟" aria-label="Permalink to &quot;一、导入活动：从“字符游戏”到“字符串逻辑”（15分钟）&quot;">​</a></h2><h3 id="活动1-名字拆解-大挑战——感知字符串结构" tabindex="-1">活动1：“名字拆解”大挑战——感知字符串结构 <a class="header-anchor" href="#活动1-名字拆解-大挑战——感知字符串结构" aria-label="Permalink to &quot;活动1：“名字拆解”大挑战——感知字符串结构&quot;">​</a></h3><ul><li>教师出示“王小明”名字卡片，提问：“怎么把这个名字拆成‘王’‘小’‘明’？怎么快速找到‘小’字的位置？”</li><li>学生用字母卡片拼出自己的名字，尝试“拆成单个字”“找出第2个字”，记录操作步骤（如“王小明→拆成3部分，第2个是‘小’”）。</li></ul><h3 id="活动2-字符项链-动画演示——理解字符串本质" tabindex="-1">活动2：“字符项链”动画演示——理解字符串本质 <a class="header-anchor" href="#活动2-字符项链-动画演示——理解字符串本质" aria-label="Permalink to &quot;活动2：“字符项链”动画演示——理解字符串本质&quot;">​</a></h3><ul><li>播放动画：字符串<code>&quot;Hello&quot;</code>像5颗珠子（H-e-l-l-o）串成的项链，每颗珠子有固定位置（编号0-4）。</li><li>类比：“字符串就是字符的‘项链’，编程可以像拆项链、换珠子一样处理文本”。</li></ul><h2 id="二、知识点讲解-字符串的-基础魔法-30分钟" tabindex="-1">二、知识点讲解：字符串的“基础魔法”（30分钟） <a class="header-anchor" href="#二、知识点讲解-字符串的-基础魔法-30分钟" aria-label="Permalink to &quot;二、知识点讲解：字符串的“基础魔法”（30分钟）&quot;">​</a></h2><h3 id="模块1-认识字符串——文本的-数字编码-5分钟" tabindex="-1">模块1：认识字符串——文本的“数字编码”（5分钟） <a class="header-anchor" href="#模块1-认识字符串——文本的-数字编码-5分钟" aria-label="Permalink to &quot;模块1：认识字符串——文本的“数字编码”（5分钟）&quot;">​</a></h3><ul><li><strong>核心概念</strong>：字符串是用英文引号（<code>&quot;&quot;</code>或<code>&#39;&#39;</code>）包裹的文本（如<code>&quot;Python&quot;</code>、<code>&#39;你好&#39;</code>），本质是字符的有序集合（像排队的人，有固定顺序）。</li><li><strong>生活案例</strong>：微信消息、作文内容、网址都是字符串，编程处理字符串就是“让计算机帮我们整理文字”。</li></ul><h3 id="模块2-索引与切片——精准-提取-字符-15分钟" tabindex="-1">模块2：索引与切片——精准“提取”字符（15分钟） <a class="header-anchor" href="#模块2-索引与切片——精准-提取-字符-15分钟" aria-label="Permalink to &quot;模块2：索引与切片——精准“提取”字符（15分钟）&quot;">​</a></h3><ul><li><strong>比喻</strong>： <ul><li>索引=字符的“座位号”（从0开始，如<code>&quot;abc&quot;</code>中<code>a</code>是0号，<code>b</code>是1号）；</li><li>切片=“截取一段项链”（如从0号到2号，取前3颗珠子）。</li></ul></li><li><strong>代码演示</strong>：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 示例：处理名字“李晓华”</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">name </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;李晓华&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. 索引：获取单个字符（格式：变量[编号]）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">first_char </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> name[</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 0号是第一个字符</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;姓氏：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, first_char)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输出：姓氏：李</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. 切片：获取一段字符（格式：变量[开始:结束]，结束编号不包含在内）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">last_two </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> name[</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 从1号到3号（不包含3号），即1和2号</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;名字：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, last_two)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输出：名字：晓华</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li><li><strong>关键规则</strong>： <ul><li>索引越界错误：若字符串长度为3（编号0-2），访问<code>name[3]</code>会报错（“项链只有3颗珠子，没有第4颗”）；</li><li>省略规则：<code>name[:2]</code>=从开头取到2号（不包含2号），<code>name[1:]</code>=从1号取到结尾。</li></ul></li></ul><h3 id="模块3-拼接与替换——-重组-文本-10分钟" tabindex="-1">模块3：拼接与替换——“重组”文本（10分钟） <a class="header-anchor" href="#模块3-拼接与替换——-重组-文本-10分钟" aria-label="Permalink to &quot;模块3：拼接与替换——“重组”文本（10分钟）&quot;">​</a></h3><ul><li><strong>拼接</strong>：用<code>+</code>连接两个字符串（像把两条项链接成一条）：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">first_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;张&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">last_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;三&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">full_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> first_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> last_name  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 拼接</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(full_name)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输出：张三</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><strong>替换</strong>：<code>replace(旧字符, 新字符)</code>——替换指定字符（像把项链中的红珠子换成蓝珠子）：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">sentence </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;我喜欢苹果，苹果很好吃&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">new_sentence </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> sentence.replace(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;苹果&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;香蕉&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 把“苹果”换成“香蕉”</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(new_sentence)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输出：我喜欢香蕉，香蕉很好吃</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul><h2 id="三、练习题设计-分层任务-生活应用-25分钟" tabindex="-1">三、练习题设计：分层任务+生活应用（25分钟） <a class="header-anchor" href="#三、练习题设计-分层任务-生活应用-25分钟" aria-label="Permalink to &quot;三、练习题设计：分层任务+生活应用（25分钟）&quot;">​</a></h2><h3 id="基础任务-全员完成-姓名处理器" tabindex="-1">基础任务（全员完成）：“姓名处理器” <a class="header-anchor" href="#基础任务-全员完成-姓名处理器" aria-label="Permalink to &quot;基础任务（全员完成）：“姓名处理器”&quot;">​</a></h3><ul><li>要求：用索引、切片、拼接处理自己的姓名，输出“姓氏”“名字”“倒序姓名”（如“李晓华”→“华晓李”）。</li><li>代码框架：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">my_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;______&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 填写自己的姓名（2-3个字）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. 提取姓氏</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">family_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> my_name[__]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 补全索引</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. 提取名字（除姓氏外的部分）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">given_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> my_name[__:__]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 补全切片</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3. 倒序排列（提示：用[::-1]切片）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">reversed_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> my_name[::</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 4. 输出结果</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;姓氏：</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">family_name</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">，名字：</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">given_name</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">，倒序：</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">reversed_name</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li></ul><h3 id="进阶任务-选做-句子变形器" tabindex="-1">进阶任务（选做）：“句子变形器” <a class="header-anchor" href="#进阶任务-选做-句子变形器" aria-label="Permalink to &quot;进阶任务（选做）：“句子变形器”&quot;">​</a></h3><ul><li>要求：处理句子<code>&quot;Python is fun, I love Python&quot;</code>，完成： <ol><li>替换“Python”为“编程”；</li><li>提取“fun”（从第10到13号字符）；</li><li>拼接“编程很有趣！”和提取的单词。</li></ol></li></ul><h3 id="创意任务-挑战-暗号生成器" tabindex="-1">创意任务（挑战）：“暗号生成器” <a class="header-anchor" href="#创意任务-挑战-暗号生成器" aria-label="Permalink to &quot;创意任务（挑战）：“暗号生成器”&quot;">​</a></h3><ul><li>用替换功能设计简单暗号（如把“a”换成“@”，“s”换成“$”），将自己的爱好写成暗号，让同桌解密。</li></ul><h3 id="教师支持" tabindex="-1">教师支持： <a class="header-anchor" href="#教师支持" aria-label="Permalink to &quot;教师支持：&quot;">​</a></h3><ul><li>打开AI代码小助手，学生可提问“怎么提取第3个字？”“倒序切片怎么写？”，AI生成带注释的示例代码（如<code>name[::-1]</code>的解释：“从结尾到开头，步长为-1，即倒序”）。</li></ul><h2 id="四、讲解与互评-从-操作-到-逻辑-15分钟" tabindex="-1">四、讲解与互评：从“操作”到“逻辑”（15分钟） <a class="header-anchor" href="#四、讲解与互评-从-操作-到-逻辑-15分钟" aria-label="Permalink to &quot;四、讲解与互评：从“操作”到“逻辑”（15分钟）&quot;">​</a></h2><ol><li><strong>错误分析</strong>：投屏典型错误（如索引从1开始、切片包含结束编号），引导学生用“字符项链”模型排查（“第1颗珠子编号是0还是1？”）。</li><li><strong>创意展示</strong>：选2份“暗号生成器”作品，全班尝试解密，作者讲解替换规则，评选“最佳暗号设计师”。</li></ol><h2 id="五、总结与作业-5分钟" tabindex="-1">五、总结与作业（5分钟） <a class="header-anchor" href="#五、总结与作业-5分钟" aria-label="Permalink to &quot;五、总结与作业（5分钟）&quot;">​</a></h2><h3 id="课堂总结" tabindex="-1">课堂总结： <a class="header-anchor" href="#课堂总结" aria-label="Permalink to &quot;课堂总结：&quot;">​</a></h3><ul><li>字符串是“字符项链”，用<code>&quot;&quot;</code>或<code>&#39;&#39;</code>定义；</li><li>索引（<code>[编号]</code>）取单个字符，切片（<code>[开始:结束]</code>）取一段字符；</li><li>拼接（<code>+</code>）和替换（<code>replace()</code>）可重组文本。</li></ul><h3 id="课后作业" tabindex="-1">课后作业： <a class="header-anchor" href="#课后作业" aria-label="Permalink to &quot;课后作业：&quot;">​</a></h3><ol><li>用代码处理家人的姓名，输出“姓氏+‘先生/女士’”（如“王女士”）；</li><li>设计一句包含3个“今天”的句子，用<code>replace()</code>把“今天”换成“明天”，观察结果。</li></ol><h2 id="教学理论支撑" tabindex="-1">教学理论支撑： <a class="header-anchor" href="#教学理论支撑" aria-label="Permalink to &quot;教学理论支撑：&quot;">​</a></h2><ol><li><strong>皮亚杰形式运算阶段理论</strong>：通过“字符项链”具象模型，帮助学生将抽象的字符串索引转化为“座位编号”的具体逻辑，逐步形成抽象思维。</li><li><strong>维果茨基最近发展区</strong>：分层任务（基础→创意）匹配不同学生的现有能力，AI代码小助手作为“脚手架”，帮助学生解决切片规则等难点。</li><li><strong>自我决定理论</strong>：“姓名处理”“暗号设计”关联学生生活，满足自主需求（设计个人规则）和胜任需求（完成解密挑战），激发内在动机。</li><li><strong>STEAM教育融合</strong>：结合技术（字符串操作）、语言（文本处理）、逻辑（规则设计），让编程成为文本分析与创意表达的工具。</li></ol>`,37)])])}const u=i(e,[["render",t]]);export{c as __pageData,u as default};
