import{j as i,c as a,b as n,ag as l}from"./chunks/framework.CPnt7f93.js";const c=JSON.parse('{"title":"坐标的“位置密码”与直线图形绘制","description":"","frontmatter":{},"headers":[],"relativePath":"python/level-1/class03.md","filePath":"python/level-1/class03.md","lastUpdated":1761651013000}'),t={name:"python/level-1/class03.md"};function e(h,s,p,r,k,d){return n(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="坐标的-位置密码-与直线图形绘制" tabindex="-1">坐标的“位置密码”与直线图形绘制 <a class="header-anchor" href="#坐标的-位置密码-与直线图形绘制" aria-label="Permalink to &quot;坐标的“位置密码”与直线图形绘制&quot;">​</a></h1><h2 id="课题" tabindex="-1">课题 <a class="header-anchor" href="#课题" aria-label="Permalink to &quot;课题&quot;">​</a></h2><p>turtle库的“坐标魔法”——用代码画出直线与正方形</p><h2 id="教学时间" tabindex="-1">教学时间 <a class="header-anchor" href="#教学时间" aria-label="Permalink to &quot;教学时间&quot;">​</a></h2><p>2课时（90分钟）</p><h2 id="课前准备" tabindex="-1">课前准备 <a class="header-anchor" href="#课前准备" aria-label="Permalink to &quot;课前准备&quot;">​</a></h2><ul><li><strong>教师端</strong>：电脑（Python 3.10+，预装turtle库）、投影仪、坐标网格黑板（1m×1m，标注x/y轴）、“坐标卡片”（写有(3,2)、(-1,4)等）、几何积木（正方形、长方形）、错误代码示例图（如忘记写括号、角度错误）。</li><li><strong>学生端</strong>：电脑（turtle环境）、坐标纸（每人2张）、彩色笔（标注图形边长）、笔记本（记录坐标规律）。</li><li><strong>教学素材</strong>：turtle基础代码模板、“图形闯关任务单”（分层练习）、“坐标小达人”奖励徽章。</li></ul><h2 id="一、导入活动-从-教室坐标-到-代码坐标-15分钟" tabindex="-1">一、导入活动：从“教室坐标”到“代码坐标”（15分钟） <a class="header-anchor" href="#一、导入活动-从-教室坐标-到-代码坐标-15分钟" aria-label="Permalink to &quot;一、导入活动：从“教室坐标”到“代码坐标”（15分钟）&quot;">​</a></h2><h3 id="活动1-坐标寻宝-游戏——理解x-y轴的意义" tabindex="-1">活动1：“坐标寻宝”游戏——理解x/y轴的意义 <a class="header-anchor" href="#活动1-坐标寻宝-游戏——理解x-y轴的意义" aria-label="Permalink to &quot;活动1：“坐标寻宝”游戏——理解x/y轴的意义&quot;">​</a></h3><ul><li>教师在教室地面贴坐标网格（以讲台为原点(0,0)，右为x轴正方向，前为y轴正方向），在(2,1)、(-1,3)等位置放小贴纸。</li><li>规则：学生抽取“坐标卡片”，根据坐标找到对应位置的贴纸，提问：“(3,0)在哪里？”引导发现“x轴控制左右，y轴控制前后”。</li><li>类比：“电脑屏幕也有坐标，左上角是(0,0)，向右x变大，向下y变大——这就是turtle画图的‘位置密码’”。</li></ul><h3 id="活动2-积木拼正方形-——感知-边长与角度-的关系" tabindex="-1">活动2：“积木拼正方形”——感知“边长与角度”的关系 <a class="header-anchor" href="#活动2-积木拼正方形-——感知-边长与角度-的关系" aria-label="Permalink to &quot;活动2：“积木拼正方形”——感知“边长与角度”的关系&quot;">​</a></h3><ul><li>学生用几何积木拼正方形，观察：“拼4条边后，转了多少度？”（引导发现每转90°，4次正好转一圈360°）。</li><li>播放短视频：turtle画图过程（直线→转向→直线），类比“积木拼接”：<code>forward(50)</code>=摆一根50长的边，<code>right(90)</code>=转90°。</li></ul><h2 id="二、知识点讲解-turtle基础与坐标绘图-30分钟" tabindex="-1">二、知识点讲解：turtle基础与坐标绘图（30分钟） <a class="header-anchor" href="#二、知识点讲解-turtle基础与坐标绘图-30分钟" aria-label="Permalink to &quot;二、知识点讲解：turtle基础与坐标绘图（30分钟）&quot;">​</a></h2><h3 id="模块1-认识turtle——代码世界的-小画家-10分钟" tabindex="-1">模块1：认识turtle——代码世界的“小画家”（10分钟） <a class="header-anchor" href="#模块1-认识turtle——代码世界的-小画家-10分钟" aria-label="Permalink to &quot;模块1：认识turtle——代码世界的“小画家”（10分钟）&quot;">​</a></h3><ul><li><strong>核心概念</strong>：turtle是Python的“绘图库”，像一只带着画笔的小乌龟，用代码控制它移动、转向、抬笔/落笔。</li><li><strong>基础指令</strong>（结合演示）：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> turtle  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 导入turtle库（召唤小乌龟）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> turtle.Turtle()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建小乌龟t（可以取其他名字，如pen）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.forward(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 向前走100步（画直线）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.right(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 向右转90度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.forward(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 再向前走100步</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">turtle.done()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 保持窗口不关闭</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><strong>坐标控制</strong>：用<code>goto(x,y)</code>直接跳转到指定坐标，如：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.penup()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 抬笔（不画线）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.goto(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 跳到(50,50)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.pendown()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 落笔（开始画线）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.forward(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 从(50,50)向前画50步</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ul><h3 id="模块2-绘制正方形——循环与角度的配合-20分钟" tabindex="-1">模块2：绘制正方形——循环与角度的配合（20分钟） <a class="header-anchor" href="#模块2-绘制正方形——循环与角度的配合-20分钟" aria-label="Permalink to &quot;模块2：绘制正方形——循环与角度的配合（20分钟）&quot;">​</a></h3><ul><li><strong>分步画法</strong>（无循环，适合理解逻辑）：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> turtle</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> turtle.Turtle()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.forward(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 第一条边</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.right(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.forward(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 第二条边</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.right(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.forward(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 第三条边</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.right(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.forward(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 第四条边</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">turtle.done()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li><li><strong>优化：用for循环简化代码</strong>（引入循环逻辑）：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> turtle</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> turtle.Turtle()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> _ </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">):  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重复4次（正方形4条边）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.forward(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.right(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">turtle.done()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><strong>关键规律</strong>： <ol><li>正方形边长= <code>forward()</code>的参数（如80）；</li><li>每次转向角度= 90°（<code>right(90)</code>）；</li><li>变量控制大小：把边长设为变量，方便修改（如<code>size = 100</code>，再用<code>forward(size)</code>）。</li></ol></li></ul><h2 id="三、练习题设计-分层任务-坐标挑战-25分钟" tabindex="-1">三、练习题设计：分层任务+坐标挑战（25分钟） <a class="header-anchor" href="#三、练习题设计-分层任务-坐标挑战-25分钟" aria-label="Permalink to &quot;三、练习题设计：分层任务+坐标挑战（25分钟）&quot;">​</a></h2><h3 id="基础任务-全员完成-我的第一个正方形" tabindex="-1">基础任务（全员完成）：“我的第一个正方形” <a class="header-anchor" href="#基础任务-全员完成-我的第一个正方形" aria-label="Permalink to &quot;基础任务（全员完成）：“我的第一个正方形”&quot;">​</a></h3><ul><li>要求：用循环绘制边长为60的正方形，用<code>goto()</code>让小乌龟从(0,0)开始画，完成后用<code>color(&quot;red&quot;)</code>设置画笔颜色。</li><li>示例框架：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> turtle</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> turtle.Turtle()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.color(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;red&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 画笔颜色</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.penup()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.goto(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 起点坐标</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.pendown()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">size </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 60</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 边长变量</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> _ </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.forward(size)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.right(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">turtle.done()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></li></ul><h3 id="进阶任务-选做-坐标跳房子" tabindex="-1">进阶任务（选做）：“坐标跳房子” <a class="header-anchor" href="#进阶任务-选做-坐标跳房子" aria-label="Permalink to &quot;进阶任务（选做）：“坐标跳房子”&quot;">​</a></h3><ul><li>用<code>goto(x,y)</code>+<code>forward()</code>绘制2个不同位置的正方形（如一个在(0,0)，一个在(100,50)），边长分别为50和80，用不同颜色区分。</li></ul><h3 id="教师支持" tabindex="-1">教师支持： <a class="header-anchor" href="#教师支持" aria-label="Permalink to &quot;教师支持：&quot;">​</a></h3><ul><li>提供“错误排查表”：如“图形不闭合”→检查是否转了4次90°；“颜色没变化”→检查<code>color()</code>是否写在绘图前。</li></ul><h2 id="四、讲解与互评-从-图形-到-逻辑-15分钟" tabindex="-1">四、讲解与互评：从“图形”到“逻辑”（15分钟） <a class="header-anchor" href="#四、讲解与互评-从-图形-到-逻辑-15分钟" aria-label="Permalink to &quot;四、讲解与互评：从“图形”到“逻辑”（15分钟）&quot;">​</a></h2><ol><li><strong>问题诊断</strong>：投屏典型错误代码（如<code>right(80)</code>导致图形歪斜），让学生找出问题：“为什么这个正方形‘塌了’？”（角度不够90°）。</li><li><strong>创意展示</strong>：选2份不同颜色/位置的作品，提问：“如果边长改成100，代码哪里要改？”（强化变量的作用）。</li><li><strong>坐标规律总结</strong>：师生共同填写“坐标记录表”——<table tabindex="0"><thead><tr><th>图形起点坐标</th><th>边长</th><th>转向角度</th><th>循环次数</th></tr></thead><tbody><tr><td>(0,0)</td><td>60</td><td>90°</td><td>4</td></tr></tbody></table></li></ol><h2 id="五、总结与作业-5分钟" tabindex="-1">五、总结与作业（5分钟） <a class="header-anchor" href="#五、总结与作业-5分钟" aria-label="Permalink to &quot;五、总结与作业（5分钟）&quot;">​</a></h2><h3 id="课堂总结" tabindex="-1">课堂总结： <a class="header-anchor" href="#课堂总结" aria-label="Permalink to &quot;课堂总结：&quot;">​</a></h3><ul><li>坐标是“位置密码”：x控制左右，y控制上下；</li><li>turtle基础指令：<code>forward(步长)</code>、<code>right(角度)</code>、<code>goto(x,y)</code>、<code>color(颜色)</code>；</li><li>正方形绘制公式：<code>for _ in range(4): forward(边长); right(90)</code>。</li></ul><h3 id="课后作业" tabindex="-1">课后作业： <a class="header-anchor" href="#课后作业" aria-label="Permalink to &quot;课后作业：&quot;">​</a></h3><ol><li>绘制一个“双色正方形”：前两条边红色，后两条边蓝色（提示：在循环中用<code>if</code>判断次数）；</li><li>在坐标纸上标记出你画的正方形四个顶点的坐标（如起点(0,0)，终点(60,0)等）。</li></ol><h2 id="教学理论支撑与设计理由" tabindex="-1">教学理论支撑与设计理由： <a class="header-anchor" href="#教学理论支撑与设计理由" aria-label="Permalink to &quot;教学理论支撑与设计理由：&quot;">​</a></h2><ol><li><strong>皮亚杰认知发展理论</strong>：通过“教室坐标寻宝”“积木拼接”等具体操作，帮助11-15岁学生（形式运算阶段初期）将抽象的x/y轴概念转化为具象经验，再过渡到代码逻辑。</li><li><strong>维果茨基最近发展区</strong>：分层任务（基础→进阶）配合“错误排查表”，为不同水平学生提供“刚好够得着”的挑战，避免挫败感。</li><li><strong>STEAM融合</strong>：数学（坐标计算、角度规律）与艺术（颜色搭配、图形布局）结合，用代码实现“精准的美”，让学生感知“技术是艺术的工具”。</li></ol>`,33)])])}const g=i(t,[["render",e]]);export{c as __pageData,g as default};
