import{j as i,c as a,b as n,ag as l}from"./chunks/framework.CPnt7f93.js";const g=JSON.parse('{"title":"循环与规律创作（下）——嵌套循环与复杂图案的数学逻辑","description":"","frontmatter":{},"headers":[],"relativePath":"python/level-1/class08.md","filePath":"python/level-1/class08.md","lastUpdated":1761651013000}'),h={name:"python/level-1/class08.md"};function e(t,s,p,r,k,d){return n(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="循环与规律创作-下-——嵌套循环与复杂图案的数学逻辑" tabindex="-1">循环与规律创作（下）——嵌套循环与复杂图案的数学逻辑 <a class="header-anchor" href="#循环与规律创作-下-——嵌套循环与复杂图案的数学逻辑" aria-label="Permalink to &quot;循环与规律创作（下）——嵌套循环与复杂图案的数学逻辑&quot;">​</a></h1><h2 id="课题" tabindex="-1">课题 <a class="header-anchor" href="#课题" aria-label="Permalink to &quot;课题&quot;">​</a></h2><p>用嵌套循环解锁“多层重复”的秘密</p><h2 id="教学时间" tabindex="-1">教学时间 <a class="header-anchor" href="#教学时间" aria-label="Permalink to &quot;教学时间&quot;">​</a></h2><p>2课时（90分钟）</p><h2 id="课前准备" tabindex="-1">课前准备 <a class="header-anchor" href="#课前准备" aria-label="Permalink to &quot;课前准备&quot;">​</a></h2><ul><li><strong>教师端</strong>：电脑（Python 3.10+）、投影仪、多媒体课件（含多层重复图案：棋盘格、砖墙、树木年轮）、实物道具（多层抽屉、俄罗斯套娃）、“嵌套指令卡”（外层：“3行”，内层：“每行4个”）。</li><li><strong>学生端</strong>：电脑（Python环境）、方格纸（绘制棋盘格草稿）、计算器（计算图形参数）、小组任务卡（含项目主题）。</li><li><strong>教学素材</strong>：嵌套循环代码模板、“多层规律分析表”（记录外层/内层循环的作用）、AI代码小助手（可生成嵌套循环框架）。</li></ul><h2 id="一、导入活动-从-多层重复-到嵌套循环-15分钟" tabindex="-1">一、导入活动：从“多层重复”到嵌套循环（15分钟） <a class="header-anchor" href="#一、导入活动-从-多层重复-到嵌套循环-15分钟" aria-label="Permalink to &quot;一、导入活动：从“多层重复”到嵌套循环（15分钟）&quot;">​</a></h2><h2 id="活动1-摆棋子-游戏——体验双层重复" tabindex="-1">活动1：“摆棋子”游戏——体验双层重复 <a class="header-anchor" href="#活动1-摆棋子-游戏——体验双层重复" aria-label="Permalink to &quot;活动1：“摆棋子”游戏——体验双层重复&quot;">​</a></h2><ul><li>任务：用围棋子在桌面摆“3行4列”的长方形阵，记录步骤。</li><li>学生反馈：“先摆第1行4个，再摆第2行4个，再摆第3行4个”。</li><li>提炼逻辑：<strong>外层循环控制“行数”，内层循环控制“每行的个数”</strong>——这就是“嵌套循环”。</li></ul><h2 id="活动2-拆俄罗斯套娃-——理解循环嵌套结构" tabindex="-1">活动2：“拆俄罗斯套娃”——理解循环嵌套结构 <a class="header-anchor" href="#活动2-拆俄罗斯套娃-——理解循环嵌套结构" aria-label="Permalink to &quot;活动2：“拆俄罗斯套娃”——理解循环嵌套结构&quot;">​</a></h2><ul><li>展示套娃：“最大的娃里有中娃，中娃里有小娃——就像循环里套循环”。</li><li>类比代码：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 外层循环：3个套娃</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> 大娃 </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">):</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 内层循环：每个套娃里有2个装饰</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> 装饰 </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;画装饰&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ul><h2 id="二、知识点讲解-嵌套循环与复杂图案设计-30分钟" tabindex="-1">二、知识点讲解：嵌套循环与复杂图案设计（30分钟） <a class="header-anchor" href="#二、知识点讲解-嵌套循环与复杂图案设计-30分钟" aria-label="Permalink to &quot;二、知识点讲解：嵌套循环与复杂图案设计（30分钟）&quot;">​</a></h2><h2 id="模块1-嵌套循环的语法与执行逻辑-12分钟" tabindex="-1">模块1：嵌套循环的语法与执行逻辑（12分钟） <a class="header-anchor" href="#模块1-嵌套循环的语法与执行逻辑-12分钟" aria-label="Permalink to &quot;模块1：嵌套循环的语法与执行逻辑（12分钟）&quot;">​</a></h2><ul><li><strong>核心概念</strong>：一个循环体内包含另一个循环（外层循环控制“大重复”，内层循环控制“小重复”），格式：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> 外层变量 </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(外层次数):</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 外层循环要做的事（如换行、移动位置）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> 内层变量 </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(内层次数):</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 内层循环要做的事（如画一个小图形）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><strong>执行顺序</strong>： <ul><li>外层第1次循环 → 内层循环执行完所有次数 → 外层第2次循环 → 内层循环执行完所有次数 → …直到外层结束。</li></ul></li><li><strong>生活案例</strong>：打印3行5列的星号阵（<code>*</code>）：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> row </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">):  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3行</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> col </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">):  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 每行5个</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E36209;">end</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot; &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># end=&quot; &quot;表示不换行</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 每行结束后换行</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>输出：<div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span>* * * * * </span></span>
<span class="line"><span>* * * * * </span></span>
<span class="line"><span>* * * * *</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul><h2 id="模块2-用嵌套循环绘制棋盘格-18分钟" tabindex="-1">模块2：用嵌套循环绘制棋盘格（18分钟） <a class="header-anchor" href="#模块2-用嵌套循环绘制棋盘格-18分钟" aria-label="Permalink to &quot;模块2：用嵌套循环绘制棋盘格（18分钟）&quot;">​</a></h2><ul><li><strong>需求</strong>：画8×8的黑白棋盘（每个小方格边长30，相邻方格颜色交替）。</li><li><strong>数学分析</strong>： <ul><li>外层循环：8行（<code>range(8)</code>），每行结束后“回到行首+向下移动30”；</li><li>内层循环：8列（<code>range(8)</code>），每个方格颜色=“黑” if (行+列)为偶数 else “白”（交替逻辑）。</li></ul></li><li><strong>代码实现</strong>：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> turtle</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> turtle.Turtle()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.speed(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 最快速度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">size </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 30</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 方格边长</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> row </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">):  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 外层：8行</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> col </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">):  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 内层：8列</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 计算颜色（行列和为偶→黑，奇→白）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (row </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> col) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">%</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">            t.color(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;black&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        else</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">            t.color(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;white&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 画方格（填充）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">        t.begin_fill()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> _ </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">):  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 小循环：画正方形</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">            t.forward(size)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">            t.right(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">        t.end_fill()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 移动到下一列</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">        t.forward(size)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 每行结束后：回到行首，向下移动一行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.penup()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.goto(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(row </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> size)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># y坐标负方向移动（向下）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.pendown()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">turtle.done()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div></li></ul><h2 id="三、练习题设计-分层任务-小组项目-30分钟" tabindex="-1">三、练习题设计：分层任务+小组项目（30分钟） <a class="header-anchor" href="#三、练习题设计-分层任务-小组项目-30分钟" aria-label="Permalink to &quot;三、练习题设计：分层任务+小组项目（30分钟）&quot;">​</a></h2><h2 id="基础任务-全员完成-彩色网格" tabindex="-1">基础任务（全员完成）：“彩色网格” <a class="header-anchor" href="#基础任务-全员完成-彩色网格" aria-label="Permalink to &quot;基础任务（全员完成）：“彩色网格”&quot;">​</a></h2><ul><li>要求：用嵌套循环画4×4网格，每个方格边长40，颜色按“红→绿→蓝→黄”循环（每行重复这4种颜色）。</li><li>提示：颜色列表<code>colors = [&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;, &quot;yellow&quot;]</code>，内层用<code>colors[col]</code>调用。</li></ul><h2 id="进阶任务-选做-同心圆阵" tabindex="-1">进阶任务（选做）：“同心圆阵” <a class="header-anchor" href="#进阶任务-选做-同心圆阵" aria-label="Permalink to &quot;进阶任务（选做）：“同心圆阵”&quot;">​</a></h2><ul><li>要求：外层循环控制“圆的层数”（5层），内层循环控制“每层的圆数量”（第1层1个，第2层2个…第5层5个），每层圆半径递增20。</li></ul><h2 id="小组项目-补充课时核心-四季树-主题创作" tabindex="-1">小组项目（补充课时核心）：“四季树”主题创作 <a class="header-anchor" href="#小组项目-补充课时核心-四季树-主题创作" aria-label="Permalink to &quot;小组项目（补充课时核心）：“四季树”主题创作&quot;">​</a></h2><ul><li>任务：用嵌套循环设计“一棵有年轮的树”——外层循环画5圈年轮（半径递增10），内层循环在年轮外画树叶（每圈12片叶子，均匀分布）。</li><li>分工：1人设计年轮参数（半径、颜色），1人设计树叶逻辑（角度360÷12=30度），1人调试代码。</li><li>AI支持：用AI代码小助手生成“画树叶的函数”，小组修改参数适配年轮。</li></ul><h2 id="四、讲解与互评-从-图案-到-逻辑-10分钟" tabindex="-1">四、讲解与互评：从“图案”到“逻辑”（10分钟） <a class="header-anchor" href="#四、讲解与互评-从-图案-到-逻辑-10分钟" aria-label="Permalink to &quot;四、讲解与互评：从“图案”到“逻辑”（10分钟）&quot;">​</a></h2><ol><li><strong>代码拆解</strong>：选1组“四季树”项目，让学生讲解“外层循环做了什么？内层循环做了什么？数学规律是什么？”（如“每圈树叶数量=层数×2”）。</li><li><strong>问题复盘</strong>：讨论“内层循环忘记缩进导致只画1片叶子”“角度计算错误导致树叶重叠”等问题的解决方法。</li><li><strong>跨组互评</strong>：用“多层规律分析表”为其他组评分（维度：逻辑清晰度、数学准确性、创意性）。</li></ol><h2 id="五、总结与作业-5分钟" tabindex="-1">五、总结与作业（5分钟） <a class="header-anchor" href="#五、总结与作业-5分钟" aria-label="Permalink to &quot;五、总结与作业（5分钟）&quot;">​</a></h2><h2 id="课堂总结" tabindex="-1">课堂总结： <a class="header-anchor" href="#课堂总结" aria-label="Permalink to &quot;课堂总结：&quot;">​</a></h2><ul><li>嵌套循环的作用：处理**“大重复包含小重复”**的任务，外层控制整体结构，内层控制局部细节；</li><li>关键逻辑：先确定“外层次数”和“内层次数”，再设计“外层变化量”（如行数、半径）和“内层变化量”（如列数、角度）；</li><li>与数学的深度关联：图案的对称性、均匀性依赖于除法（如360÷数量=间隔角度）和加减法（如行列和控制颜色）。</li></ul><h2 id="课后作业" tabindex="-1">课后作业： <a class="header-anchor" href="#课后作业" aria-label="Permalink to &quot;课后作业：&quot;">​</a></h2><ol><li>用嵌套循环画“楼梯”（外层5级，内层每级的台阶数=级数，如第1级1阶，第2级2阶）；</li><li>记录项目中“最有成就感的bug解决过程”，下次课分享。</li></ol><h2 id="教学理论支撑" tabindex="-1">教学理论支撑： <a class="header-anchor" href="#教学理论支撑" aria-label="Permalink to &quot;教学理论支撑：&quot;">​</a></h2><ol><li><strong>少年教育心理学的“逻辑推理发展”</strong>：通过嵌套循环的“双层逻辑”训练，提升少年的层级思维能力（从“单一重复”到“多层嵌套”）。</li><li><strong>自我决定理论</strong>：小组项目赋予学生“参数设计权”和“分工自主权”，满足自主性需求，增强编程动机。</li><li><strong>STEAM教育的工程思维</strong>：“四季树”项目需要拆解任务（年轮/树叶）、设计参数（半径/角度）、迭代调试，体现“工程设计流程”。</li></ol>`,33)])])}const c=i(h,[["render",e]]);export{g as __pageData,c as default};
