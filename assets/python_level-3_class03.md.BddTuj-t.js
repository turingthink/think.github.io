import{j as i,c as a,b as n,ag as l}from"./chunks/framework.CPnt7f93.js";const u=JSON.parse('{"title":"第一部分：AI对话的秘密——认识AI接口与基础调用","description":"","frontmatter":{},"headers":[],"relativePath":"python/level-3/class03.md","filePath":"python/level-3/class03.md","lastUpdated":1761651013000}'),e={name:"python/level-3/class03.md"};function t(h,s,p,r,k,o){return n(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="第一部分-ai对话的秘密——认识ai接口与基础调用" tabindex="-1">第一部分：AI对话的秘密——认识AI接口与基础调用 <a class="header-anchor" href="#第一部分-ai对话的秘密——认识ai接口与基础调用" aria-label="Permalink to &quot;第一部分：AI对话的秘密——认识AI接口与基础调用&quot;">​</a></h1><h2 id="课题" tabindex="-1">课题 <a class="header-anchor" href="#课题" aria-label="Permalink to &quot;课题&quot;">​</a></h2><p>AI是如何“听懂”问题的？——简易API接口与对话逻辑</p><h2 id="教学时间" tabindex="-1">教学时间 <a class="header-anchor" href="#教学时间" aria-label="Permalink to &quot;教学时间&quot;">​</a></h2><p>2课时（90分钟）</p><h2 id="课前准备" tabindex="-1">课前准备 <a class="header-anchor" href="#课前准备" aria-label="Permalink to &quot;课前准备&quot;">​</a></h2><ul><li><strong>教师端</strong>：电脑（Python 3.10+，预装<code>requests</code>库）、投影仪、多媒体课件（含AI对话场景视频：如智能音箱问答、客服机器人）、“对话流程图”海报（用户→请求→AI→响应）、预配置的安全版AI接口（如豆包API，限制敏感内容）。</li><li><strong>学生端</strong>：电脑（Python环境+<code>requests</code>库）、笔记本、“接口调用步骤”手卡（图文版）、小组任务单（记录测试问题与响应）。</li><li><strong>教学素材</strong>：API调用基础代码模板、错误排查指南（如“网络连接失败”“参数错误”解决方案）、“AI小助手”创意设计表（记录功能构想）。</li></ul><h2 id="一、导入活动-从-人类对话-到-ai对话-20分钟" tabindex="-1">一、导入活动：从“人类对话”到“AI对话”（20分钟） <a class="header-anchor" href="#一、导入活动-从-人类对话-到-ai对话-20分钟" aria-label="Permalink to &quot;一、导入活动：从“人类对话”到“AI对话”（20分钟）&quot;">​</a></h2><h2 id="活动1-你问我答-角色扮演——拆解对话逻辑" tabindex="-1">活动1：“你问我答”角色扮演——拆解对话逻辑 <a class="header-anchor" href="#活动1-你问我答-角色扮演——拆解对话逻辑" aria-label="Permalink to &quot;活动1：“你问我答”角色扮演——拆解对话逻辑&quot;">​</a></h2><ul><li>分组进行：1人扮演“AI”（只能回答预设问题，如“天气如何”→“今天晴天”），1人扮演“用户”（自由提问）。</li><li>提问引导：“当用户问‘没预设的问题’时，‘AI’为什么答不上来？”→引出“AI需要‘规则’（代码）才能回应”。</li><li>类比：“人类对话靠‘大脑记忆’，AI对话靠‘代码+数据’，而API就是连接用户和AI的‘电话线’”。</li></ul><h2 id="活动2-ai对话实例分析——发现-输入-输出-规律" tabindex="-1">活动2：AI对话实例分析——发现“输入-输出”规律 <a class="header-anchor" href="#活动2-ai对话实例分析——发现-输入-输出-规律" aria-label="Permalink to &quot;活动2：AI对话实例分析——发现“输入-输出”规律&quot;">​</a></h2><ul><li>播放视频：智能音箱回答“1+1等于几”→“等于2”；回答“推荐一本好书”→“《小王子》”。</li><li>小组讨论：“用户说的话”（输入）和“AI的回答”（输出）有什么关系？→总结：输入是“问题”，输出是“答案”，AI通过“处理输入”生成输出。</li><li>展示“对话流程图”：用户→输入问题→API传递请求→AI计算→API返回答案→用户接收，用箭头标注信息流动方向。</li></ul><h2 id="二、知识点讲解-ai接口与python调用-35分钟" tabindex="-1">二、知识点讲解：AI接口与Python调用（35分钟） <a class="header-anchor" href="#二、知识点讲解-ai接口与python调用-35分钟" aria-label="Permalink to &quot;二、知识点讲解：AI接口与Python调用（35分钟）&quot;">​</a></h2><h2 id="模块1-什么是api-——连接用户与ai的-桥梁-10分钟" tabindex="-1">模块1：什么是API？——连接用户与AI的“桥梁”（10分钟） <a class="header-anchor" href="#模块1-什么是api-——连接用户与ai的-桥梁-10分钟" aria-label="Permalink to &quot;模块1：什么是API？——连接用户与AI的“桥梁”（10分钟）&quot;">​</a></h2><ul><li><strong>比喻解释</strong>：API（应用程序接口）就像“餐厅服务员”——用户（顾客）告诉服务员（API）“想吃什么”（请求），服务员把需求传给厨房（AI系统），再把做好的菜（响应）端给用户。</li><li><strong>核心作用</strong>：让我们的Python程序不用自己“思考”，直接“请教”AI大脑（如豆包的模型），快速得到答案。</li><li><strong>安全说明</strong>：我们用的是老师提前配置的“儿童友好版API”，只能回答学习相关问题，保护信息安全。</li></ul><h2 id="模块2-用python调用ai接口——发送请求与接收响应-25分钟" tabindex="-1">模块2：用Python调用AI接口——发送请求与接收响应（25分钟） <a class="header-anchor" href="#模块2-用python调用ai接口——发送请求与接收响应-25分钟" aria-label="Permalink to &quot;模块2：用Python调用AI接口——发送请求与接收响应（25分钟）&quot;">​</a></h2><ul><li><p><strong>步骤拆解</strong>（结合代码演示，每步对应“服务员”比喻）：</p><ol><li><strong>“打电话”（导入工具）</strong>：用<code>requests</code>库发送网络请求（类似手机拨号）：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> requests  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 导入“网络电话”工具</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><strong>“说需求”（设置参数）</strong>：告诉AI问题是什么（类似告诉服务员点什么菜）：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">url </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;老师提供的API地址&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # AI的“电话号码”</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">question </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> input</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;请输入你的问题：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用户的问题（输入）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">params </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">    &quot;prompt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">: question,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 明确告诉AI要处理的内容</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">    &quot;max_tokens&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">100</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 限制回答长度（最多100个字）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><strong>“等回复”（发送请求）</strong>：通过API把问题传给AI（类似服务员下单）：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">response </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> requests.get(url, </span><span style="--shiki-light:#E36209;--shiki-dark:#E36209;">params</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">params)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 发送请求</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><strong>“看答案”（解析响应）</strong>：从AI的回复中提取答案（类似服务员上菜）：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">result </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> response.json()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 把AI的回复转成字典（便于提取）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">answer </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> result[</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;answer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 提取“answer”字段的内容</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;AI回答：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, answer)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ol></li><li><p><strong>关键规则</strong>：</p><ul><li>API地址和参数格式必须严格按照老师提供的模板（如同打电话必须拨对号码）；</li><li>若出现<code>ConnectionError</code>，检查网络连接；若出现<code>KeyError</code>，检查参数是否正确（如<code>&quot;answer&quot;</code>是否拼对）。</li></ul></li></ul><h2 id="三、实践任务-打造-基础问答小助手-25分钟" tabindex="-1">三、实践任务：打造“基础问答小助手”（25分钟） <a class="header-anchor" href="#三、实践任务-打造-基础问答小助手-25分钟" aria-label="Permalink to &quot;三、实践任务：打造“基础问答小助手”（25分钟）&quot;">​</a></h2><h2 id="基础任务-全员完成-学科小顾问" tabindex="-1">基础任务（全员完成）：“学科小顾问” <a class="header-anchor" href="#基础任务-全员完成-学科小顾问" aria-label="Permalink to &quot;基础任务（全员完成）：“学科小顾问”&quot;">​</a></h2><ul><li>目标：调用AI接口，实现“输入数学/科学问题→输出答案”的功能。</li><li>代码框架（提供模板，学生填充关键部分）：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> requests</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. 配置API（老师提供的地址）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">api_url </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;______&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 填写老师给的API地址</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. 获取用户问题</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">user_question </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> input</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;请问一个数学或科学问题（如‘地球为什么会转’）：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3. 发送请求给AI</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">try</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    response </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> requests.get(api_url, </span><span style="--shiki-light:#E36209;--shiki-dark:#E36209;">params</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;prompt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">: user_question})</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 4. 提取并显示答案</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    answer </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> response.json()[</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;answer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;AI小顾问：</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">answer</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">except</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> Exception</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> as</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> e:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;出错啦：</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">e</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">，请检查网络或参数！&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></li></ul><h2 id="进阶任务-选做-个性化问候" tabindex="-1">进阶任务（选做）：“个性化问候” <a class="header-anchor" href="#进阶任务-选做-个性化问候" aria-label="Permalink to &quot;进阶任务（选做）：“个性化问候”&quot;">​</a></h2><ul><li>扩展功能：让AI先问候用户（如“你好！我是你的学科小顾问，有问题问我吧～”），再回答问题。</li><li>提示：在<code>params[&quot;prompt&quot;]</code>中加入问候语，如<code>f&quot;先问候我，再回答：{user_question}&quot;</code>。</li></ul><h2 id="教师支持" tabindex="-1">教师支持： <a class="header-anchor" href="#教师支持" aria-label="Permalink to &quot;教师支持：&quot;">​</a></h2><ul><li>提供“错误代码对照表”（如<code>404</code>→“API地址错了”，<code>500</code>→“AI忙，请重试”）；</li><li>打开“AI调试小助手”（简化版LangChain工具），学生输入错误信息，AI生成修正建议（如“检查<code>api_url</code>是否有空格”）。</li></ul><h2 id="四、测试与互评-小助手-体检-10分钟" tabindex="-1">四、测试与互评：小助手“体检”（10分钟） <a class="header-anchor" href="#四、测试与互评-小助手-体检-10分钟" aria-label="Permalink to &quot;四、测试与互评：小助手“体检”（10分钟）&quot;">​</a></h2><ol><li><strong>小组互测</strong>：每组选3个问题（1个数学题、1个科学题、1个趣味题），测试对方的小助手，记录“回答是否准确”“是否有错误”。</li><li><strong>改进建议</strong>：用便利贴写下“你的小助手最棒的地方”和“可以优化的点”（如“希望回答更简洁”“能识别拼音问题就更好了”）。</li></ol><h2 id="五、总结与作业-10分钟" tabindex="-1">五、总结与作业（10分钟） <a class="header-anchor" href="#五、总结与作业-10分钟" aria-label="Permalink to &quot;五、总结与作业（10分钟）&quot;">​</a></h2><h2 id="课堂总结" tabindex="-1">课堂总结： <a class="header-anchor" href="#课堂总结" aria-label="Permalink to &quot;课堂总结：&quot;">​</a></h2><ul><li>AI对话的核心逻辑：输入问题→API传递→AI处理→输出答案；</li><li>Python调用API的步骤：导入<code>requests</code>→设置参数→发送请求→解析响应；</li><li>关键提醒：API参数要准确，遇到错误先查网络和格式。</li></ul><h2 id="课后作业" tabindex="-1">课后作业： <a class="header-anchor" href="#课后作业" aria-label="Permalink to &quot;课后作业：&quot;">​</a></h2><ol><li>完善基础问答小助手，测试5个不同学科的问题，记录“AI回答最棒的一个”（截图或抄录）；</li><li>思考：“如果想让小助手记住我之前问过的问题（比如先问‘什么是质数’，再问‘它有什么用’），需要加什么功能？”（下次课揭晓）。</li></ol><h2 id="教学理论支撑" tabindex="-1">教学理论支撑： <a class="header-anchor" href="#教学理论支撑" aria-label="Permalink to &quot;教学理论支撑：&quot;">​</a></h2><ol><li><strong>维果茨基最近发展区理论</strong>：通过“对话流程图”“代码模板”“错误对照表”搭建脚手架，帮助学生跨越“API抽象概念→实际调用”的认知鸿沟。</li><li><strong>自我决定理论</strong>：允许学生自主选择测试问题（如感兴趣的科学话题），满足自主性需求，增强学习动机。</li><li><strong>STEAM教育融合</strong>：结合技术（API工具）、科学（AI信息处理原理）、工程（系统流程设计），理解AI对话的跨学科本质。</li></ol>`,33)])])}const c=i(e,[["render",t]]);export{u as __pageData,c as default};
