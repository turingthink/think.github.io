import{j as i,c as a,b as n,ag as l}from"./chunks/framework.CPnt7f93.js";const g=JSON.parse('{"title":"BEEP","description":"","frontmatter":{},"headers":[],"relativePath":"arduino/6.beep.md","filePath":"arduino/6.beep.md","lastUpdated":1761651013000}'),p={name:"arduino/6.beep.md"};function e(h,s,t,k,r,d){return n(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="beep" tabindex="-1">BEEP <a class="header-anchor" href="#beep" aria-label="Permalink to &quot;BEEP&quot;">​</a></h1><h2 id="硬件连接" tabindex="-1">硬件连接 <a class="header-anchor" href="#硬件连接" aria-label="Permalink to &quot;硬件连接&quot;">​</a></h2><div class="language-md vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">接线说明：蜂鸣器模块--&gt;ESP32 IO</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">       (BEEP)--&gt;(25)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="软件实现" tabindex="-1">软件实现 <a class="header-anchor" href="#软件实现" aria-label="Permalink to &quot;软件实现&quot;">​</a></h2><details class="details custom-block"><summary>Beep 代码</summary><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &lt;Arduino.h&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//定义蜂鸣器控制管脚</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> beep_pin</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">  25</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">char</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> g_i</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">  pinMode</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(beep_pin, OUTPUT);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//设置引脚为输出模式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> loop</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">  g_i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">  digitalWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(beep_pin,g_i);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//引脚输出电平翻转</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">  delayMicroseconds</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">2000</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//延时250us</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">  delay</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">  g_i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">  digitalWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(beep_pin,g_i);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//引脚输出电平翻转</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">  delayMicroseconds</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">2000</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//延时250us</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div></details>`,5)])])}const b=i(p,[["render",e]]);export{g as __pageData,b as default};
