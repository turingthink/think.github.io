import{j as i,c as a,b as n,ag as l}from"./chunks/framework.CPnt7f93.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"c++/level-1/09.array.md","filePath":"c++/level-1/09.array.md","lastUpdated":1761651013000}'),p={name:"c++/level-1/09.array.md"};function h(k,s,t,e,r,d){return n(),a("div",null,[...s[0]||(s[0]=[l(`<h2 id="_10-结构体与联合体" tabindex="-1">10. 结构体与联合体 <a class="header-anchor" href="#_10-结构体与联合体" aria-label="Permalink to &quot;10. 结构体与联合体&quot;">​</a></h2><h3 id="_10-1-结构体" tabindex="-1">10.1 结构体 <a class="header-anchor" href="#_10-1-结构体" aria-label="Permalink to &quot;10.1 结构体&quot;">​</a></h3><h3 id="_10-2-联合体" tabindex="-1">10.2 联合体 <a class="header-anchor" href="#_10-2-联合体" aria-label="Permalink to &quot;10.2 联合体&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &lt;iostream&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> Rectangle</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">private:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> length;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> width;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">public:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">    Rectangle</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#E36209;"> l</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#E36209;"> w</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">        length </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> l;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">        width </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> w;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> calculateArea</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> length </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> width;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    Rectangle </span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">rect</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> area </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> rect.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">calculateArea</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">    std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;矩形的面积是: &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> &lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> area </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::endl;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>在这个示例中，我们定义了一个名为Rectangle的类，该类具有私有的length和width成员变量，以及公共的构造函数和calculateArea()成员函数。构造函数用于初始化矩形的长度和宽度，而calculateArea()函数用于计算矩形的面积。</p><p>在main()函数中，我们创建了一个Rectangle对象rect，并调用它的calculateArea()函数来计算矩形的面积。最后，我们将结果输出到控制台上。</p><p>这个示例展示了面向对象编程的一些基本概念，例如类的定义、对象的创建和成员函数的调用。在实际的面向对象编程中，还可以涉及更多的特性，如继承、多态和封装等。</p><p>程序基本概念：</p><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &lt;iostream&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 标识符、常量、变量和表达式</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> num1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> num2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> sum </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> num1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> num2;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 输出结果</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">    std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;sum = &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> &lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> sum </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::endl;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>基本数据类型：</p><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &lt;iostream&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 整数型</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> num </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    long</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> bigNum </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 10000000000</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">LL</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 实数型</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> floatValue </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 3.14</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    double</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> doubleValue </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 3.14159</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 字符型</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    char</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> ch </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &#39;A&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 布尔型</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    bool</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> isTrue </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>程序基本语句</p><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &lt;iostream&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 输入语句</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> num;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">    std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;请输入一个整数: &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">    std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::cin </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> num;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 输出语句</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">    std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;您输入的整数是: &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> &lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> num </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::endl;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 赋值语句</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> y;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    y </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> x;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 条件语句</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (x </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> y) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">        std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;x 大于 y&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> &lt;&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::endl;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    else</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (x </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> y) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">        std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;x 小于 y&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> &lt;&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::endl;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    else</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">        std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;x 等于 y&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> &lt;&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::endl;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 循环语句</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">        std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot; &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">    std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::endl;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    while</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">        std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot; &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">        i</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">    std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::endl;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    do</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">        std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot; &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">        i</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">while</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">    std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">::endl;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div>`,13)])])}const y=i(p,[["render",h]]);export{c as __pageData,y as default};
