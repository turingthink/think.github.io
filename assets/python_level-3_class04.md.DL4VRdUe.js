import{j as i,c as a,b as n,ag as l}from"./chunks/framework.CPnt7f93.js";const g=JSON.parse('{"title":"第二部分：让AI更聪明——对话优化与实用功能开发","description":"","frontmatter":{},"headers":[],"relativePath":"python/level-3/class04.md","filePath":"python/level-3/class04.md","lastUpdated":1761651013000}'),h={name:"python/level-3/class04.md"};function t(p,s,e,k,r,d){return n(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="第二部分-让ai更聪明——对话优化与实用功能开发" tabindex="-1">第二部分：让AI更聪明——对话优化与实用功能开发 <a class="header-anchor" href="#第二部分-让ai更聪明——对话优化与实用功能开发" aria-label="Permalink to &quot;第二部分：让AI更聪明——对话优化与实用功能开发&quot;">​</a></h1><h2 id="课题" tabindex="-1">课题 <a class="header-anchor" href="#课题" aria-label="Permalink to &quot;课题&quot;">​</a></h2><p>会“记事儿”的AI助手——历史对话与功能升级</p><h2 id="教学时间" tabindex="-1">教学时间 <a class="header-anchor" href="#教学时间" aria-label="Permalink to &quot;教学时间&quot;">​</a></h2><p>2课时（90分钟）</p><h2 id="课前准备" tabindex="-1">课前准备 <a class="header-anchor" href="#课前准备" aria-label="Permalink to &quot;课前准备&quot;">​</a></h2><ul><li><strong>教师端</strong>：电脑（预装<code>python-dotenv</code>库管理API密钥）、投影仪、“对话记忆”对比视频（普通助手vs带记忆的助手）、历史对话流程图（新增“记忆区”模块）、安全升级版API（支持多轮对话）。</li><li><strong>学生端</strong>：电脑（Python环境+<code>python-dotenv</code>库）、笔记本、“功能升级清单”（可选功能：记忆对话、分类回答、错误提示）、小组开发计划书（含分工）。</li><li><strong>教学素材</strong>：多轮对话代码模板、<code>dotenv</code>配置教程、“AI助手评价表”（功能完整性、易用性、创意性）。</li></ul><h2 id="一、导入活动-健忘的ai-vs-贴心的ai-15分钟" tabindex="-1">一、导入活动：“健忘的AI”vs“贴心的AI”（15分钟） <a class="header-anchor" href="#一、导入活动-健忘的ai-vs-贴心的ai-15分钟" aria-label="Permalink to &quot;一、导入活动：“健忘的AI”vs“贴心的AI”（15分钟）&quot;">​</a></h2><h2 id="活动1-体验对比——发现-记忆-的重要性" tabindex="-1">活动1：体验对比——发现“记忆”的重要性 <a class="header-anchor" href="#活动1-体验对比——发现-记忆-的重要性" aria-label="Permalink to &quot;活动1：体验对比——发现“记忆”的重要性&quot;">​</a></h2><ul><li>教师演示两个助手： <ul><li>普通助手：用户问“什么是质数？”→回答；再问“它和合数有什么区别？”→AI反问“什么是质数？”（忘记前文）。</li><li>带记忆的助手：相同提问→AI直接回答“质数是……，而合数是……”（记住前文）。</li></ul></li><li>小组讨论：“哪个助手更实用？为什么？”→总结：AI需要“记住历史对话”才能理解上下文。</li></ul><h2 id="活动2-人类记忆-类比——设计对话存储方式" tabindex="-1">活动2：“人类记忆”类比——设计对话存储方式 <a class="header-anchor" href="#活动2-人类记忆-类比——设计对话存储方式" aria-label="Permalink to &quot;活动2：“人类记忆”类比——设计对话存储方式&quot;">​</a></h2><ul><li>提问：“你和朋友聊天时，怎么记住之前说过的话？”→引出“大脑会存储对话内容”。</li><li>迁移到编程：“让AI记住对话，需要用一个‘容器’存储历史内容”→介绍列表（<code>history = []</code>）作为“对话记忆盒”。</li></ul><h2 id="二、知识点讲解-升级ai助手的核心技术-35分钟" tabindex="-1">二、知识点讲解：升级AI助手的核心技术（35分钟） <a class="header-anchor" href="#二、知识点讲解-升级ai助手的核心技术-35分钟" aria-label="Permalink to &quot;二、知识点讲解：升级AI助手的核心技术（35分钟）&quot;">​</a></h2><h2 id="模块1-历史对话存储——用列表记录上下文-15分钟" tabindex="-1">模块1：历史对话存储——用列表记录上下文（15分钟） <a class="header-anchor" href="#模块1-历史对话存储——用列表记录上下文-15分钟" aria-label="Permalink to &quot;模块1：历史对话存储——用列表记录上下文（15分钟）&quot;">​</a></h2><ul><li><strong>原理</strong>：每次对话后，将“用户问题+AI回答”存入列表，下次提问时把列表内容传给AI，让它“回顾历史”。</li><li><strong>代码实现</strong>：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> requests</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 初始化“记忆盒”（空列表）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">history </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 循环对话（支持多次提问）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">while</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> True</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    user_question </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> input</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;你：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> user_question </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;退出&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        break</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 输入“退出”结束对话</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 1. 整理历史对话（拼接成字符串，让AI看懂）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    history_str </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">.join(history)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用换行分隔每条记录</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 2. 新问题+历史对话一起发给AI</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    full_prompt </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> f</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;历史对话：</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">history_str</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">}\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">现在用户问：</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">user_question</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 3. 调用API（参数不变，prompt更新为full_prompt）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    response </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> requests.get(api_url, </span><span style="--shiki-light:#E36209;--shiki-dark:#E36209;">params</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;prompt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">: full_prompt})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    answer </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> response.json()[</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;answer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;AI：</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">answer</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 4. 把新对话存入“记忆盒”</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    history.append(</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;用户：</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">user_question</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    history.append(</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;AI：</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">answer</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div></li><li><strong>关键说明</strong>：<code>while True</code>实现“循环对话”（反复提问），<code>history.append()</code>动态更新记忆内容。</li></ul><h2 id="模块2-功能优化——让助手更-贴心-20分钟" tabindex="-1">模块2：功能优化——让助手更“贴心”（20分钟） <a class="header-anchor" href="#模块2-功能优化——让助手更-贴心-20分钟" aria-label="Permalink to &quot;模块2：功能优化——让助手更“贴心”（20分钟）&quot;">​</a></h2><ul><li><strong>优化1：分类回答</strong>（如区分“数学题”“科学题”，用不同语气）：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在full_prompt中加入分类指令</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">full_prompt </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> f</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;如果是数学题，开头加‘📐’；科学题加‘🔬’。</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">full_prompt</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><strong>优化2：错误处理升级</strong>（如网络断开时提示“请检查WiFi”）：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">try</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    response </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> requests.get(api_url, </span><span style="--shiki-light:#E36209;--shiki-dark:#E36209;">params</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;prompt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">: full_prompt})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    response.raise_for_status()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查请求是否成功（如404/500错误）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    answer </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> response.json()[</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;answer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">except</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> requests.exceptions.RequestException </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> e:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    answer </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> f</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;网络出问题啦：</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">e</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">，请稍后再试～&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><strong>优化3：安全密钥管理</strong>（用<code>dotenv</code>隐藏API密钥，避免泄露）： <ol><li>创建<code>.env</code>文件：<code>API_KEY=&quot;你的密钥&quot;</code>；</li><li>代码中加载：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> dotenv </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> load_dotenv</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> os</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">load_dotenv()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 加载.env文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">api_key </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> os.getenv(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;API_KEY&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 读取密钥</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ol></li></ul><h2 id="三、项目开发-学科专属ai助手-30分钟" tabindex="-1">三、项目开发：“学科专属AI助手”（30分钟） <a class="header-anchor" href="#三、项目开发-学科专属ai助手-30分钟" aria-label="Permalink to &quot;三、项目开发：“学科专属AI助手”（30分钟）&quot;">​</a></h2><h2 id="任务目标" tabindex="-1">任务目标： <a class="header-anchor" href="#任务目标" aria-label="Permalink to &quot;任务目标：&quot;">​</a></h2><p>小组合作开发带“记忆功能”的AI助手，至少实现1项优化功能（分类回答/智能错误提示/学科专属指令），并测试3轮连续对话。</p><h2 id="开发流程" tabindex="-1">开发流程： <a class="header-anchor" href="#开发流程" aria-label="Permalink to &quot;开发流程：&quot;">​</a></h2><ol><li><strong>分工</strong>：1人写核心对话逻辑，1人实现优化功能，1人负责测试与记录bug；</li><li><strong>编码</strong>：基于模板修改，参考“功能升级清单”添加特色（如“语文助手”自动标注拼音）；</li><li><strong>测试</strong>：用“连续问题”验证记忆功能（如“什么是方程→举一个例子→这个例子中x是什么”）。</li></ol><h2 id="示例成果-数学助手片段" tabindex="-1">示例成果（数学助手片段）： <a class="header-anchor" href="#示例成果-数学助手片段" aria-label="Permalink to &quot;示例成果（数学助手片段）：&quot;">​</a></h2><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 数学专属AI助手（带记忆+分类标记）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">history </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> []</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">while</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> True</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    user_question </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> input</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;数学小助手&gt; &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> user_question </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;再见&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;AI：下次见！&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        break</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    history_str </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">.join(history)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    full_prompt </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> f</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;用📐开头，用小学生能懂的话回答：</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">history_str</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">}\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">用户问：</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">user_question</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 调用API与存储历史（略）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="四、成果展示与评价-10分钟" tabindex="-1">四、成果展示与评价（10分钟） <a class="header-anchor" href="#四、成果展示与评价-10分钟" aria-label="Permalink to &quot;四、成果展示与评价（10分钟）&quot;">​</a></h2><ol><li><strong>小组展示</strong>：每组派1人演示助手功能，说明“记忆功能如何实现”“优化了什么”；</li><li><strong>多维评价</strong>：用评价表打分（功能完整性30%+易用性30%+创意性40%），评选“最贴心助手”“最有创意助手”。</li></ol><h2 id="五、总结与拓展-10分钟" tabindex="-1">五、总结与拓展（10分钟） <a class="header-anchor" href="#五、总结与拓展-10分钟" aria-label="Permalink to &quot;五、总结与拓展（10分钟）&quot;">​</a></h2><h2 id="课堂总结" tabindex="-1">课堂总结： <a class="header-anchor" href="#课堂总结" aria-label="Permalink to &quot;课堂总结：&quot;">​</a></h2><ul><li>历史对话核心：用列表存储<code>用户问题+AI回答</code>，每次请求时传递历史内容；</li><li>功能优化方向：分类响应、友好错误提示、安全管理密钥；</li><li>AI助手的本质：通过“数据传递+逻辑控制”模拟“理解”能力。</li></ul><h2 id="拓展任务" tabindex="-1">拓展任务： <a class="header-anchor" href="#拓展任务" aria-label="Permalink to &quot;拓展任务：&quot;">​</a></h2><ol><li>个人：给助手添加“知识点总结”功能（如对话结束后，AI自动说“今天我们聊了质数和合数，重点是……”）；</li><li>小组：设计“校园生活助手”（回答“图书馆开馆时间”“食堂菜单”等，需提前存入校园信息），下次课展示。</li></ol><h2 id="教学理论支撑" tabindex="-1">教学理论支撑： <a class="header-anchor" href="#教学理论支撑" aria-label="Permalink to &quot;教学理论支撑：&quot;">​</a></h2><ol><li><strong>皮亚杰形式运算阶段理论</strong>：通过“历史对话存储”理解“动态数据管理”，培养抽象逻辑思维（列表作为“记忆模型”）。</li><li><strong>STEAM教育工程思维</strong>：按“需求分析→功能设计→编码实现→测试优化”的工程流程开发项目，体验完整开发周期。</li><li><strong>社会建构主义理论</strong>：小组分工与互评促进知识共享，通过“解释给同伴听”深化对API调用逻辑的理解。</li></ol>`,33)])])}const y=i(h,[["render",t]]);export{g as __pageData,y as default};
