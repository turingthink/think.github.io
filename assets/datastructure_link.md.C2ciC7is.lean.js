import{j as o,c as Q,b as l,ag as T,q as t,f as e}from"./chunks/framework.CPnt7f93.js";const i="/assets/skiplist.xLkQjA25.png",r="/assets/skiplist01.DKAy5HdO.webp",n="/assets/skiplist02.T31sJWoc.webp",d="/assets/skiplist03.CiTQloqC.webp",s="/assets/skiplist10.CBrWCTiX.webp",m="/assets/skiplist04.CGYqLl6y.webp",h="/assets/skiplist05.DtEyrsUz.webp",p="/assets/skiplist06.CzI4mTBt.webp",g="/assets/skiplist07.CG3VwpjC.webp",u="/assets/skiplist08.P9s0xxa4.webp",c="/assets/skiplist06.CzI4mTBt.webp",x="/assets/skiplist011.xqINXFCz.webp",w="/assets/skiplist012.6Vh1Rj4O.webp",f="/assets/skiplist013.Bo3V-Feh.webp",k="/assets/skiplist014.D5bZlVQI.webp",L="/assets/skiplist015.S8Uzk1by.webp",F=JSON.parse('{"title":"链表","description":"","frontmatter":{},"headers":[],"relativePath":"datastructure/link.md","filePath":"datastructure/link.md","lastUpdated":1761651013000}'),_={name:"datastructure/link.md"},b={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},M={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"7.485ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 3308.3 1000","aria-hidden":"true"},y={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},H={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.464ex"},xmlns:"http://www.w3.org/2000/svg",width:"13.015ex",height:"2.034ex",role:"img",focusable:"false",viewBox:"0 -694 5752.8 899","aria-hidden":"true"},v={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},Z={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.464ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.118ex",height:"2.034ex",role:"img",focusable:"false",viewBox:"0 -694 4030.4 899","aria-hidden":"true"},V={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},D={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"7.485ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 3308.3 1000","aria-hidden":"true"},C={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},q={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"7.485ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 3308.3 1000","aria-hidden":"true"},P={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},S={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.464ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.998ex",height:"2.034ex",role:"img",focusable:"false",viewBox:"0 -694 1767.3 899","aria-hidden":"true"},A={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},j={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.464ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.998ex",height:"2.034ex",role:"img",focusable:"false",viewBox:"0 -694 1767.3 899","aria-hidden":"true"},I={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},B={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.464ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.998ex",height:"2.034ex",role:"img",focusable:"false",viewBox:"0 -694 1767.3 899","aria-hidden":"true"},O={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},E={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"29.368ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 12980.8 1000","aria-hidden":"true"},N={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},R={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"7.485ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 3308.3 1000","aria-hidden":"true"};function z(G,a,J,X,U,$){return l(),Q("div",null,[a[35]||(a[35]=T("",33)),t("p",null,[a[2]||(a[2]=e("实现链表的二分查找. 时间复杂度为 ",-1)),t("mjx-container",b,[(l(),Q("svg",M,[...a[0]||(a[0]=[T("",1)])])),a[1]||(a[1]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"O"),t("mo",{stretchy:"false"},"("),t("mi",null,"l"),t("mi",null,"o"),t("msub",null,[t("mi",null,"g"),t("mi",null,"n")]),t("mo",{stretchy:"false"},")")])],-1))]),a[3]||(a[3]=e(", 首先是一个顺序链表.",-1))]),a[36]||(a[36]=T("",13)),t("p",null,[a[8]||(a[8]=e("先来求跳表的索引高度。如下图所示，假设每两个结点会抽出一个结点作为上一级索引的结点，原始的链表有n个元素，则一级索引有n/2 个元素、二级索引有 n/4 个元素、k级索引就有 n/2k个元素。最高级索引一般有2个元素，即：最高级索引 h 满足 2 = n/2h，即 ",-1)),t("mjx-container",y,[(l(),Q("svg",H,[...a[4]||(a[4]=[T("",1)])])),a[5]||(a[5]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"h"),t("mo",null,"="),t("mi",null,"l"),t("mi",null,"o"),t("msub",null,[t("mi",null,"g"),t("mrow",{"data-mjx-texclass":"ORD"},[t("mn",null,"2"),t("mi",null,"n")])]),t("mo",null,"−"),t("mn",null,"1")])],-1))]),a[9]||(a[9]=e("，最高级索引 h 为索引层的高度加上原始数据一层，跳表的总高度 ",-1)),t("mjx-container",v,[(l(),Q("svg",Z,[...a[6]||(a[6]=[T("",1)])])),a[7]||(a[7]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"h"),t("mo",null,"="),t("mi",null,"l"),t("mi",null,"o"),t("msub",null,[t("mi",null,"g"),t("mrow",{"data-mjx-texclass":"ORD"},[t("mn",null,"2"),t("mi",null,"n")])])])],-1))]),a[10]||(a[10]=e("。",-1))]),a[37]||(a[37]=T("",28)),t("p",null,[a[13]||(a[13]=e("整体思路大家应该明白了，那插入数据时维护索引的时间复杂度是多少呢？元素插入到单链表的时间复杂度为 O(1)，我们索引的高度最多为 logn，当插入一个元素 x 时，最坏的情况就是元素 x 需要插入到每层索引中，所以插入数据到各层索引中，最坏时间复杂度是 ",-1)),t("mjx-container",V,[(l(),Q("svg",D,[...a[11]||(a[11]=[T("",1)])])),a[12]||(a[12]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"O"),t("mo",{stretchy:"false"},"("),t("mi",null,"l"),t("mi",null,"o"),t("msub",null,[t("mi",null,"g"),t("mi",null,"n")]),t("mo",{stretchy:"false"},")")])],-1))]),a[14]||(a[14]=e("。",-1))]),a[38]||(a[38]=T("",9)),t("p",null,[a[17]||(a[17]=e("整个插入过程的路径与查找元素路径类似， 每层索引中插入元素的时间复杂度 O(1)，所以整个插入的时间复杂度是 ",-1)),t("mjx-container",C,[(l(),Q("svg",q,[...a[15]||(a[15]=[T("",1)])])),a[16]||(a[16]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"O"),t("mo",{stretchy:"false"},"("),t("mi",null,"l"),t("mi",null,"o"),t("msub",null,[t("mi",null,"g"),t("mi",null,"n")]),t("mo",{stretchy:"false"},")")])],-1))]),a[18]||(a[18]=e("。",-1))]),a[39]||(a[39]=T("",4)),t("p",null,[a[29]||(a[29]=e("删除元素的过程跟查找元素的过程类似，只不过在查找的路径上如果发现了要删除的元素 x，则执行删除操作。跳表中，每一层索引其实都是一个有序的单链表，单链表删除元素的时间复杂度为 O(1)，索引层数为 ",-1)),t("mjx-container",P,[(l(),Q("svg",S,[...a[19]||(a[19]=[T("",1)])])),a[20]||(a[20]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"l"),t("mi",null,"o"),t("msub",null,[t("mi",null,"g"),t("mi",null,"n")])])],-1))]),a[30]||(a[30]=e(" 表示最多需要删除 ",-1)),t("mjx-container",A,[(l(),Q("svg",j,[...a[21]||(a[21]=[T("",1)])])),a[22]||(a[22]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"l"),t("mi",null,"o"),t("msub",null,[t("mi",null,"g"),t("mi",null,"n")])])],-1))]),a[31]||(a[31]=e(" 个元素，所以删除元素的总时间包含 查找元素的时间 加 删除 ",-1)),t("mjx-container",I,[(l(),Q("svg",B,[...a[23]||(a[23]=[T("",1)])])),a[24]||(a[24]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"l"),t("mi",null,"o"),t("msub",null,[t("mi",null,"g"),t("mi",null,"n")])])],-1))]),a[32]||(a[32]=e(" 个元素的时间 为 ",-1)),t("mjx-container",O,[(l(),Q("svg",E,[...a[25]||(a[25]=[T("",1)])])),a[26]||(a[26]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"O"),t("mo",{stretchy:"false"},"("),t("mi",null,"l"),t("mi",null,"o"),t("msub",null,[t("mi",null,"g"),t("mi",null,"n")]),t("mo",{stretchy:"false"},")"),t("mo",null,"+"),t("mi",null,"O"),t("mo",{stretchy:"false"},"("),t("mi",null,"l"),t("mi",null,"o"),t("msub",null,[t("mi",null,"g"),t("mi",null,"n")]),t("mo",{stretchy:"false"},")"),t("mo",null,"="),t("mn",null,"2"),t("mi",null,"O"),t("mo",{stretchy:"false"},"("),t("mi",null,"l"),t("mi",null,"o"),t("msub",null,[t("mi",null,"g"),t("mi",null,"n")]),t("mo",{stretchy:"false"},")")])],-1))]),a[33]||(a[33]=e("，忽略常数部分，删除元素的时间复杂度为 ",-1)),t("mjx-container",N,[(l(),Q("svg",R,[...a[27]||(a[27]=[T("",1)])])),a[28]||(a[28]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"O"),t("mo",{stretchy:"false"},"("),t("mi",null,"l"),t("mi",null,"o"),t("msub",null,[t("mi",null,"g"),t("mi",null,"n")]),t("mo",{stretchy:"false"},")")])],-1))]),a[34]||(a[34]=e("。",-1))]),a[40]||(a[40]=T("",10))])}const K=o(_,[["render",z]]);export{F as __pageData,K as default};
