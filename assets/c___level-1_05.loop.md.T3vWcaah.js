import{j as l,E as p,c as k,b as i,ag as a,h as t,w as n,f as e,I as r,ah as d}from"./chunks/framework.CPnt7f93.js";const u=JSON.parse('{"title":"循环语句","description":"","frontmatter":{},"headers":[],"relativePath":"c++/level-1/05.loop.md","filePath":"c++/level-1/05.loop.md","lastUpdated":1761651013000}'),C={name:"c++/level-1/05.loop.md"};function g(y,s,A,D,c,E){const h=p("Mermaid");return i(),k("div",null,[s[1]||(s[1]=a(`<h1 id="循环语句" tabindex="-1">循环语句 <a class="header-anchor" href="#循环语句" aria-label="Permalink to &quot;循环语句&quot;">​</a></h1><p>循环结构是 C 语言中三大常用程序结构之一, 循环就是重复地执行同一段代码. 例如, 我们需要输出 10 行 “Hello world!” 在我们的屏幕上. 为了方便, 增加行号.</p><p>实现上面的代码:</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &lt;stdio.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">	printf</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;Hello world!</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	return</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="while" tabindex="-1">while <a class="header-anchor" href="#while" aria-label="Permalink to &quot;while&quot;">​</a></h2><p>C 语言中的 while 语言使用方法:</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> () {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">		,</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">------------------------------</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> C 语言 关键字 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">		|</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">  ,</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">---------------------------</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> 循环的条件, 非零即为真. </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	while</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">		printf</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;Hello world!</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">); </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;----</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> 循环的语句</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>上面输入的结果与我们想要的结果是不一样的. 那说明程序出现的另外的一种错误就是逻辑错误, 在工业界也称之为bug. 程序代码中最常见的两种错误, 一种是语法错误, 是编译时就能发现, 一种就是逻辑错误, 运行时才能发现, 但是有一些逻辑错误很难发现, 这个周期会长一些. 所以, 我们需要专业的软件测试工程, 对我们的代码进行测试. 帮助我们发现 bug 逻辑上的错误.</p><p>上面的代码, 我们需要引入计数器, 在这我们使用 int i 为计数变量, 用来存放我们输出多少行 hello world. 修改上面的代码, 如下:</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &lt;stdio.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	while</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">		printf</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;Hello world!</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	return</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>发现运行结果还是不对, 想一下我们那里出的问题. 发现, 我们的计数变量并没有使用. 再次修改代码. 将输出完 hello world , 将 i 进行加 1.</p><p>全代码:</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &lt;stdio.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	while</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">		printf</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;Hello world!</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">		i</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	return</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>这回代码对了.</p><h4 id="思考题" tabindex="-1">思考题 <a class="header-anchor" href="#思考题" aria-label="Permalink to &quot;思考题&quot;">​</a></h4><ol><li>输出行号. (printf 中的 %d)</li><li>修改上面的程序的计数变量 i = i + 2; 看看循环结果是什么?</li><li>修改上面的程序的循环条件 i &lt; 20 看看输出的结果是什么?</li></ol><h4 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h4>`,17)),(i(),t(d,null,{default:n(()=>[r(h,{id:"mermaid-57",class:"mermaid",graph:"flowchart%0A%20%20%20%20A%5B%E5%BC%80%E5%A7%8B%5D%20--%3E%20B%7B%E5%BE%AA%E7%8E%AF%E6%9D%A1%E4%BB%B6%7D%0A%20%20%20%20B%20--%20%E7%9C%9F%20o--%3E%20C%5B%E6%89%A7%E8%A1%8C%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5%5D%0A%20%20%20%20C%20--%20%E6%89%A7%E8%A1%8C%E5%AE%8C%E6%88%90%E5%90%8E%E8%BF%94%E5%9B%9E%20--%3E%20B%0A%20%20%20%20B%20--%20%E5%81%87%20----%3E%20D%5B%E7%BB%93%E6%9D%9F%E5%BE%AA%E7%8E%AF%5D%0A"})]),fallback:n(()=>[...s[0]||(s[0]=[e(" Loading... ",-1)])]),_:1})),s[2]||(s[2]=a(`<h3 id="字母转成数字" tabindex="-1">字母转成数字 <a class="header-anchor" href="#字母转成数字" aria-label="Permalink to &quot;字母转成数字&quot;">​</a></h3><p>大家有没有注意到, 我们的手机在拔打的电话界面，按键式也好，拨号式也罢，除了1和0之外的2～9八个数位上，都各有三个或四个英文字母（手机上的按键字母顺序）。美国的电话号码不仅仅是十个数字的组合，还融进了英文字母, 便把电话号码以数字加字母的形式组合成代表某种意思的英文词汇——或公司名字，或产品品牌，既是电话号码，又是商业广告，一举两得。 例如,</p><p>1-800-STAPLES 是全球卓越的办公用品公司，创立于1986年的美国波士顿。(中文商标: 史泰博 订书钉)</p><p>1-800-GATEWAY 是一家1985年成立于美国爱荷华州的公司，现成长为美国知名的PC品牌.(中文商标: 捷威)。</p><p>1-800-helloword 是一家昆明著名的少儿编程培训学校.</p><details class="details custom-block"><summary>程序代码:</summary><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &lt;stdio.h&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &lt;ctype.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> char</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> table</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">[]=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;22233344455566677778889999&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">){</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// 输入</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> ch;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	while</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">((ch</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">getchar</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">())</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">!=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">EOF){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">		if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">((ch</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&gt;=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&#39;a&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">ch</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&#39;z&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(ch</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&gt;=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&#39;A&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">ch</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;=</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&#39;Z&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">			ch </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#E36209;--shiki-dark:#E36209;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">toupper</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(ch)</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&#39;A&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">];</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">		putchar</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(ch);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	return</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></details><p>这里用到几个知识点:</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">getchar</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(): 作用是从标准输入(键盘) stdin 中读取一个字符, 该函数以无符号 </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">char</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> 强制转换为 </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> 的形式返回读取的字符，如果到达文件末尾或发生读错误，则返回 EOF。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">putchar</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(): 作用是向标准输出(屏幕) stdout 中写入一个字符, 该函数以无符号 </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">char</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> 强制转换为 </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> 的形式返回写入的字符，如果发生错误则返回 EOF。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">toupper</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(): 作用是把小字母转成大字字符.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">EOF: 是 End Of File 是C语言标准函数中表示文件结束符, 用来表示资料结束. C语言中的数据都是以字符串的ASCII代码值来存放的, ASCII的值是 </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> ~</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 127</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> , EOF定义为</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">1.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>当程序调用getchar时，程序就等着用户按键。用户输入的字符被存放在键盘缓冲区中。直到用户按回车为止。当用户键入回车之后，getchar才开始从stdin流中每次读入一个字符。getchar函数的返回值是用户输入的字符的ASCII码，若文件结尾则返回-1(EOF)，且将用户输入的字符回显到屏幕。如用户在按回车之前输入了不止一个字符，其他字符会保留在键盘缓存区中，等待后续getchar调用读取。也就是说，后续的getchar调用不会等待用户按键，而直接读取缓冲区中的字符，直到缓冲区中的字符读完后，才等待用户按键。</p><h2 id="for" tabindex="-1">for <a class="header-anchor" href="#for" aria-label="Permalink to &quot;for&quot;">​</a></h2><p>再例如, 我们要计算 1+2+3+4+ ... +99+100 的值, 就是重要重复执行加法运算.当然这个问题是一个很古老的问题, 想必大家都知道这可以使用高期的求和的公式轻松计算其结果.</p><p>数据公式:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span>(首项 + 末项) x 项数 / 2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>1加到100的算式:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span>(1 + 100) x 100 / 2 = 5050</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><details class="details custom-block"><summary>程序代码:</summary><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &lt;stdio.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> () {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> sum </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	sum </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">6</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">7</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">8</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">9</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">11</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">12</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">13</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">14</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">15</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">17</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">18</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">19</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">21</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">22</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">23</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">24</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">25</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">26</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">27</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">28</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">29</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">30</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">31</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">32</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">33</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">34</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">35</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">36</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">37</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">38</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">39</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">40</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">41</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">42</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">43</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">44</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">45</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">46</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">47</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">48</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">49</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">51</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">52</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">53</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">54</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">55</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">56</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">57</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">58</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">59</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">60</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">61</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">62</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">63</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">64</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">65</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">66</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">67</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">68</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">69</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">70</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">71</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">72</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">73</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">74</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">75</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">76</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">77</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">78</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">79</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">80</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">81</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">82</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">83</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">84</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">85</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">86</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">87</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">88</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">89</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">90</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">91</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">92</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">93</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">94</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">95</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">96</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">97</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">98</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">99</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">	printf</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;1+2+3+4+5+6+7+8+9+10+11+12+13+14+15+16+17+18+19+20+21+22+23+24+25+26+27+28+29+30+31+32+33+34+35+36+37+38+39+40+41+42+43+44+45+46+47+48+49+50+51+52+53+54+55+56+57+58+59+60+61+62+63+64+65+66+67+68+69+70+71+72+73+74+75+76+77+78+79+80+81+82+83+84+85+86+87+88+89+90+91+92+93+94+95+96+97+98+99+100=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, sum);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	return</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></details><p>C 语言中的 for 语言使用方法:</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> i;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> ,</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">------------------------------------</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> C语言的关键字</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">     ,</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">------------------------------</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> 设置计数器的初始值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> |</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">     |</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">       ,</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">----------------------</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> 循环条件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;"> |</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">     |</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">       |</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">     ,</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">----------------</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> 计数器或循环的步长</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">	printf</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;Hello world!</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">); </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;---------</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> 循环语句</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>那我们来实现一下. 输出 1+2+3+4+5+6+7+8+9+10+11+12+13+14+15+16+17+18+19+20+21+22+23+24+25+26+27+28+29+30+31+32+33+34+35+36+37+38+39+40+41+42+43+44+45+46+47+48+49+50+51+52+53+54+55+56+57+58+59+60+61+62+63+64+65+66+67+68+69+70+71+72+73+74+75+76+77+78+79+80+81+82+83+84+85+86+87+88+89+90+91+92+93+94+95+96+97+98+99+100 这文本内容.</p><details class="details custom-block"><summary>程序代码:</summary><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;"> &lt;stdio.h&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> () {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	int</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> i;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">&lt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">		printf</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, i);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">		if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(i </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;">			printf</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;+&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">	}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">	return</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></details><h3 id="思考题-1" tabindex="-1">思考题: <a class="header-anchor" href="#思考题-1" aria-label="Permalink to &quot;思考题:&quot;">​</a></h3><ol><li>如果将计数器的初始改为0, 还需要修改那些地方?</li><li>用for循环实现 1 ~ 100 的加法运算.</li></ol>`,22))])}const o=l(C,[["render",g]]);export{u as __pageData,o as default};
