import{j as i,c as a,b as n,ag as l}from"./chunks/framework.CPnt7f93.js";const y=JSON.parse('{"title":"第一部分：迷宫游戏基础——Pygame入门与角色移动","description":"","frontmatter":{},"headers":[],"relativePath":"python/level-3/class01.md","filePath":"python/level-3/class01.md","lastUpdated":1761651013000}'),e={name:"python/level-3/class01.md"};function p(h,s,t,k,r,d){return n(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="第一部分-迷宫游戏基础——pygame入门与角色移动" tabindex="-1">第一部分：迷宫游戏基础——Pygame入门与角色移动 <a class="header-anchor" href="#第一部分-迷宫游戏基础——pygame入门与角色移动" aria-label="Permalink to &quot;第一部分：迷宫游戏基础——Pygame入门与角色移动&quot;">​</a></h1><h2 id="课题" tabindex="-1">课题 <a class="header-anchor" href="#课题" aria-label="Permalink to &quot;课题&quot;">​</a></h2><p>从“玩游戏”到“做游戏”：Pygame世界的角色与移动</p><h2 id="教学时间" tabindex="-1">教学时间 <a class="header-anchor" href="#教学时间" aria-label="Permalink to &quot;教学时间&quot;">​</a></h2><p>2课时（90分钟）</p><h2 id="课前准备" tabindex="-1">课前准备 <a class="header-anchor" href="#课前准备" aria-label="Permalink to &quot;课前准备&quot;">​</a></h2><ul><li><strong>教师端</strong>：电脑（Python 3.10+、Pygame库）、投影仪、多媒体课件（含经典迷宫游戏视频：如《吃豆人》《迷宫大侦探》）、迷宫地图实物（纸质网格迷宫）、“游戏元素卡片”（角色、墙壁、终点、方向键图标）。</li><li><strong>学生端</strong>：电脑（预装Pygame，命令：<code>pip install pygame</code>）、笔记本、彩色笔（设计角色形象）、迷宫草稿纸（手绘地图）。</li><li><strong>教学素材</strong>：Pygame基础代码模板、角色图片素材（简化版：正方形/圆形角色，避免复杂图形）、AI代码小助手（预设“移动逻辑”“窗口设置”等问题的解答模板）。</li></ul><h2 id="一、导入活动-拆解-迷宫游戏-的核心元素-15分钟" tabindex="-1">一、导入活动：拆解“迷宫游戏”的核心元素（15分钟） <a class="header-anchor" href="#一、导入活动-拆解-迷宫游戏-的核心元素-15分钟" aria-label="Permalink to &quot;一、导入活动：拆解“迷宫游戏”的核心元素（15分钟）&quot;">​</a></h2><h2 id="活动1-迷宫大冒险-体验——感知游戏构成" tabindex="-1">活动1：“迷宫大冒险”体验——感知游戏构成 <a class="header-anchor" href="#活动1-迷宫大冒险-体验——感知游戏构成" aria-label="Permalink to &quot;活动1：“迷宫大冒险”体验——感知游戏构成&quot;">​</a></h2><ul><li>教师展示纸质网格迷宫：“要从起点走到终点，需要避开墙壁，控制角色移动——这就是迷宫游戏的核心”。</li><li>分组体验在线简易迷宫游戏（如4399小游戏），记录“玩游戏时你需要控制什么？”（角色位置、移动方向）、“游戏里有哪些必须的元素？”（角色、地图、墙壁、终点）。</li></ul><h2 id="活动2-游戏元素拼图-——明确开发目标" tabindex="-1">活动2：“游戏元素拼图”——明确开发目标 <a class="header-anchor" href="#活动2-游戏元素拼图-——明确开发目标" aria-label="Permalink to &quot;活动2：“游戏元素拼图”——明确开发目标&quot;">​</a></h2><ul><li>发放“游戏元素卡片”（角色、墙壁、终点、方向键），小组合作排列卡片，说明“开发一个迷宫游戏需要先实现哪些功能”。</li><li>教师总结：“今天我们要用Pygame库，先实现‘创建窗口→加载角色→用键盘控制移动’这三步，就像搭积木一样一步步造游戏”。</li></ul><h2 id="二、知识点讲解-pygame基础与角色移动逻辑-35分钟" tabindex="-1">二、知识点讲解：Pygame基础与角色移动逻辑（35分钟） <a class="header-anchor" href="#二、知识点讲解-pygame基础与角色移动逻辑-35分钟" aria-label="Permalink to &quot;二、知识点讲解：Pygame基础与角色移动逻辑（35分钟）&quot;">​</a></h2><h2 id="模块1-认识pygame——游戏开发的-工具箱-10分钟" tabindex="-1">模块1：认识Pygame——游戏开发的“工具箱”（10分钟） <a class="header-anchor" href="#模块1-认识pygame——游戏开发的-工具箱-10分钟" aria-label="Permalink to &quot;模块1：认识Pygame——游戏开发的“工具箱”（10分钟）&quot;">​</a></h2><ul><li><strong>核心概念</strong>：Pygame是Python的游戏开发库，包含“画图形、响应用户操作、播放声音”等工具，就像“游戏开发的乐高套装”。</li><li><strong>应用场景</strong>：展示用Pygame开发的简易游戏（如贪吃蛇、打砖块），强调“我们今天的迷宫游戏，就是这些复杂游戏的基础版”。</li><li><strong>基础框架</strong>：用“做饭”类比Pygame程序结构：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> pygame  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 准备工具（买菜）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">pygame.init()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 初始化工具（洗菜）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 游戏主循环（炒菜：一直翻炒直到完成）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">running </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> True</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">while</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> running:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> event </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> pygame.event.get():  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 处理事件（如关火指令）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> event.type </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> pygame.</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">QUIT</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">            running </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> False</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">pygame.quit()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 结束程序（洗碗）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li></ul><h2 id="模块2-创建游戏窗口与角色——游戏世界的-舞台-15分钟" tabindex="-1">模块2：创建游戏窗口与角色——游戏世界的“舞台”（15分钟） <a class="header-anchor" href="#模块2-创建游戏窗口与角色——游戏世界的-舞台-15分钟" aria-label="Permalink to &quot;模块2：创建游戏窗口与角色——游戏世界的“舞台”（15分钟）&quot;">​</a></h2><ul><li><strong>创建窗口</strong>：用<code>pygame.display.set_mode()</code>设置窗口大小，类比“画纸尺寸”：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> pygame</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">pygame.init()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置窗口：宽600像素，高400像素（像素=屏幕上的小格子）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">screen </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> pygame.display.set_mode((</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">600</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">pygame.display.set_caption(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;我的迷宫游戏&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 窗口标题</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><strong>加载角色</strong>：用矩形/图片表示角色，设置初始位置（x,y坐标），类比“演员站在舞台的哪个位置”：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 方法1：用矩形表示角色（简易版）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">player </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> pygame.Rect(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># (x=50, y=50, 宽=30, 高=30)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 方法2：用图片表示角色（进阶版）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># player_img = pygame.image.load(&quot;player.png&quot;)  # 加载图片</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># player_rect = player_img.get_rect(topleft=(50, 50))  # 获取图片位置</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ul><h2 id="模块3-键盘控制角色移动——让角色-听指挥-10分钟" tabindex="-1">模块3：键盘控制角色移动——让角色“听指挥”（10分钟） <a class="header-anchor" href="#模块3-键盘控制角色移动——让角色-听指挥-10分钟" aria-label="Permalink to &quot;模块3：键盘控制角色移动——让角色“听指挥”（10分钟）&quot;">​</a></h2><ul><li><strong>事件监听</strong>：Pygame通过<code>pygame.key.get_pressed()</code>检测键盘按键，就像“游戏的耳朵”：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在游戏主循环中添加移动逻辑</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">while</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> running:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    keys </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> pygame.key.get_pressed()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取所有按键状态</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 按上键：y坐标减小（向上移动）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> keys[pygame.</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">K_UP</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">        player.y </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 5</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 每次移动5像素</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 按下键：y坐标增大</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> keys[pygame.</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">K_DOWN</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">        player.y </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 5</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 按左键：x坐标减小</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> keys[pygame.</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">K_LEFT</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">        player.x </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 5</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 按右键：x坐标增大</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> keys[pygame.</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">K_RIGHT</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">        player.x </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">+=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 刷新屏幕（必须步骤，否则看不到移动）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    screen.fill((</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 白色背景（用RGB颜色值）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    pygame.draw.rect(screen, (</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">), player)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 画绿色角色</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    pygame.display.flip()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 更新显示</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div></li><li><strong>关键规则</strong>： <ol><li>坐标原点在窗口左上角（x向右增大，y向下增大）；</li><li>移动速度由<code>±5</code>控制（数值越大越快，可自定义）；</li><li>必须用<code>screen.fill()</code>和<code>pygame.display.flip()</code>刷新画面，否则角色会“拖影”。</li></ol></li></ul><h2 id="三、练习题设计-分层任务-创意优化-25分钟" tabindex="-1">三、练习题设计：分层任务+创意优化（25分钟） <a class="header-anchor" href="#三、练习题设计-分层任务-创意优化-25分钟" aria-label="Permalink to &quot;三、练习题设计：分层任务+创意优化（25分钟）&quot;">​</a></h2><h2 id="基础任务-全员完成-会动的角色" tabindex="-1">基础任务（全员完成）：“会动的角色” <a class="header-anchor" href="#基础任务-全员完成-会动的角色" aria-label="Permalink to &quot;基础任务（全员完成）：“会动的角色”&quot;">​</a></h2><ul><li>要求：基于模板实现“绿色正方形角色”，能用方向键控制上下左右移动，窗口标题设为自己的名字（如“小明的迷宫角色”）。</li><li>模板框架（提前发放，标红需修改部分）：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> pygame</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">pygame.init()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">screen </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> pygame.display.set_mode((</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">600</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">pygame.display.set_caption(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;______的迷宫角色&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 填自己的名字</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">player </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> pygame.Rect(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 角色初始位置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">running </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> True</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">while</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> running:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> event </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> pygame.event.get():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> event.type </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> pygame.</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">QUIT</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">            running </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> False</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 补充移动逻辑（复制课堂代码，修改速度为3）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    keys </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> pygame.key.get_pressed()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> keys[pygame.</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">K_UP</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">]:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">        player.y </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-=</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> 3</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # （补充下、左、右移动代码）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 刷新画面</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    screen.fill((</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    pygame.draw.rect(screen, (</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">), player)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 绿色角色</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    pygame.display.flip()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">pygame.quit()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div></li></ul><h2 id="进阶任务-选做-个性化角色" tabindex="-1">进阶任务（选做）：“个性化角色” <a class="header-anchor" href="#进阶任务-选做-个性化角色" aria-label="Permalink to &quot;进阶任务（选做）：“个性化角色”&quot;">​</a></h2><ul><li>选项1：修改角色颜色（如<code>(255,0,0)</code>为红色）、大小（<code>Rect</code>的宽高改为40）；</li><li>选项2：添加移动边界（角色不能移出窗口，提示：<code>if player.x &lt; 0: player.x = 0</code>）；</li><li>选项3：用图片作为角色（教师提供简易图片素材，如“小机器人.png”）。</li></ul><h2 id="教师支持" tabindex="-1">教师支持： <a class="header-anchor" href="#教师支持" aria-label="Permalink to &quot;教师支持：&quot;">​</a></h2><ul><li>打开AI代码小助手，学生可提问“怎么让角色变慢？”“颜色值怎么改？”，AI返回带注释的修改建议（如“把<code>player.y -= 5</code>改成<code>-2</code>即可变慢”）。</li></ul><h2 id="四、讲解与互评-从-会动-到-懂原理-10分钟" tabindex="-1">四、讲解与互评：从“会动”到“懂原理”（10分钟） <a class="header-anchor" href="#四、讲解与互评-从-会动-到-懂原理-10分钟" aria-label="Permalink to &quot;四、讲解与互评：从“会动”到“懂原理”（10分钟）&quot;">​</a></h2><ol><li><strong>问题排查</strong>：收集典型错误（如“角色不动”——忘记写移动代码；“拖影”——没加<code>screen.fill()</code>），投屏讲解原因。</li><li><strong>创意展示</strong>：选2名完成进阶任务的学生，展示“彩色角色”“带边界的移动”，讲解“你改了哪些参数？为什么？”。</li><li><strong>小组互评</strong>：用“移动流畅度”“角色创意度”两个维度，每组给邻组打分，最高分组获“游戏先锋”贴纸。</li></ol><h2 id="五、总结与作业-5分钟" tabindex="-1">五、总结与作业（5分钟） <a class="header-anchor" href="#五、总结与作业-5分钟" aria-label="Permalink to &quot;五、总结与作业（5分钟）&quot;">​</a></h2><h2 id="课堂总结" tabindex="-1">课堂总结： <a class="header-anchor" href="#课堂总结" aria-label="Permalink to &quot;课堂总结：&quot;">​</a></h2><ul><li>Pygame开发三步：初始化→主循环（处理事件+更新画面）→退出；</li><li>角色移动核心：通过<code>key.get_pressed()</code>检测按键，修改<code>x/y</code>坐标；</li><li>坐标规则：左上角为(0,0)，右→x+，下→y+。</li></ul><h2 id="课后作业" tabindex="-1">课后作业： <a class="header-anchor" href="#课后作业" aria-label="Permalink to &quot;课后作业：&quot;">​</a></h2><ol><li>优化角色移动：让角色碰到窗口边缘时“反弹”（如右边碰到时<code>x</code>开始减小）；</li><li>手绘一张迷宫地图（用网格纸，标注起点、终点、墙壁位置），下次课用代码实现。</li></ol><h2 id="教学理论支撑" tabindex="-1">教学理论支撑： <a class="header-anchor" href="#教学理论支撑" aria-label="Permalink to &quot;教学理论支撑：&quot;">​</a></h2><ol><li><strong>皮亚杰形式运算阶段理论</strong>：通过“纸质迷宫→代码实现”的具象-抽象转换，培养学生对“坐标移动”的逻辑推理能力（理解x/y变化与方向的关系）。</li><li><strong>维果茨基最近发展区</strong>：提供基础代码模板（现有能力），通过进阶任务（潜在能力）引导学生探索参数修改，AI助手作为“脚手架”降低试错成本。</li><li><strong>STEAM教育融合</strong>：结合技术（Pygame工具）、工程（游戏逻辑设计）、艺术（角色颜色/图片创意），让编程成为创造性表达的工具。</li></ol>`,35)])])}const c=i(e,[["render",p]]);export{y as __pageData,c as default};
