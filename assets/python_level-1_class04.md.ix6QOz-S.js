import{j as i,c as a,b as n,ag as l}from"./chunks/framework.CPnt7f93.js";const c=JSON.parse('{"title":"组合图形的“创意密码”与几何规律","description":"","frontmatter":{},"headers":[],"relativePath":"python/level-1/class04.md","filePath":"python/level-1/class04.md","lastUpdated":1761651013000}'),e={name:"python/level-1/class04.md"};function t(p,s,h,r,k,d){return n(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="组合图形的-创意密码-与几何规律" tabindex="-1">组合图形的“创意密码”与几何规律 <a class="header-anchor" href="#组合图形的-创意密码-与几何规律" aria-label="Permalink to &quot;组合图形的“创意密码”与几何规律&quot;">​</a></h1><h2 id="课题" tabindex="-1">课题 <a class="header-anchor" href="#课题" aria-label="Permalink to &quot;课题&quot;">​</a></h2><p>从“单一图形”到“组合创作”——用代码绘制花朵与房屋</p><h2 id="教学时间" tabindex="-1">教学时间 <a class="header-anchor" href="#教学时间" aria-label="Permalink to &quot;教学时间&quot;">​</a></h2><p>2课时（90分钟）</p><h2 id="课前准备" tabindex="-1">课前准备 <a class="header-anchor" href="#课前准备" aria-label="Permalink to &quot;课前准备&quot;">​</a></h2><ul><li><strong>教师端</strong>：电脑（turtle库+组合图形示例代码）、投影仪、“图形分解图”（花朵=圆形+花瓣，房屋=正方形+三角形）、实物教具（花朵剪纸、房屋模型）、分组评分表。</li><li><strong>学生端</strong>：电脑、坐标纸（绘制组合图形草图）、彩笔（标记图形组成部分）、“创意设计表”（记录每个图形的参数）。</li><li><strong>教学素材</strong>：组合图形代码模板、花瓣/屋顶参数对照表、“最佳创意奖”电子证书。</li></ul><h2 id="一、导入活动-图形拆拆乐-——发现组合的秘密-15分钟" tabindex="-1">一、导入活动：“图形拆拆乐”——发现组合的秘密（15分钟） <a class="header-anchor" href="#一、导入活动-图形拆拆乐-——发现组合的秘密-15分钟" aria-label="Permalink to &quot;一、导入活动：“图形拆拆乐”——发现组合的秘密（15分钟）&quot;">​</a></h2><h3 id="活动1-分解实物图形" tabindex="-1">活动1：“分解实物图形” <a class="header-anchor" href="#活动1-分解实物图形" aria-label="Permalink to &quot;活动1：“分解实物图形”&quot;">​</a></h3><ul><li>展示花朵剪纸和房屋模型，提问：“这些复杂图形是由哪些简单图形组成的？”（花朵=6片花瓣+1个花心；房屋=1个正方形墙体+1个三角形屋顶）。</li><li>分组任务：每组领取1个复杂图形（如小树、汽车），用彩笔在纸上圈出“基本图形单元”（圆形、三角形、长方形）。</li></ul><h3 id="活动2-代码拼图-游戏" tabindex="-1">活动2：“代码拼图”游戏 <a class="header-anchor" href="#活动2-代码拼图-游戏" aria-label="Permalink to &quot;活动2：“代码拼图”游戏&quot;">​</a></h3><ul><li>教师给出3段代码（画正方形、三角形、圆形），学生根据“房屋”描述（“先画墙体，再画屋顶”），按顺序拼接代码，观察运行效果。</li><li>结论：“复杂图形=简单图形按顺序/位置组合+参数调整（大小、角度）”。</li></ul><h2 id="二、知识点讲解-组合图形绘制与参数控制-30分钟" tabindex="-1">二、知识点讲解：组合图形绘制与参数控制（30分钟） <a class="header-anchor" href="#二、知识点讲解-组合图形绘制与参数控制-30分钟" aria-label="Permalink to &quot;二、知识点讲解：组合图形绘制与参数控制（30分钟）&quot;">​</a></h2><h3 id="模块1-绘制三角形——角度与边数的关系-10分钟" tabindex="-1">模块1：绘制三角形——角度与边数的关系（10分钟） <a class="header-anchor" href="#模块1-绘制三角形——角度与边数的关系-10分钟" aria-label="Permalink to &quot;模块1：绘制三角形——角度与边数的关系（10分钟）&quot;">​</a></h3><ul><li><strong>核心逻辑</strong>：三角形有3条边，每次转向120°（360°÷3），代码示例：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> turtle</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> turtle.Turtle()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.color(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;green&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> _ </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">):  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3条边</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.forward(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 边长60</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.right(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 转120°</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">turtle.done()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li><li><strong>对比发现</strong>：边数n → 转向角度= 360°÷n（正方形n=4→90°，三角形n=3→120°）。</li></ul><h3 id="模块2-绘制花朵——循环嵌套画花瓣-20分钟" tabindex="-1">模块2：绘制花朵——循环嵌套画花瓣（20分钟） <a class="header-anchor" href="#模块2-绘制花朵——循环嵌套画花瓣-20分钟" aria-label="Permalink to &quot;模块2：绘制花朵——循环嵌套画花瓣（20分钟）&quot;">​</a></h3><ul><li><strong>花瓣单元</strong>：用“小弧线+直线”画1片花瓣：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6F42C1;"> draw_petal</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(t, size):  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 定义花瓣函数（t=乌龟，size=大小）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.circle(size, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 画60°弧线（小半圆）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.right(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.circle(size, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 对称画另一个60°弧线</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.right(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 调整到下一片花瓣的角度</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><strong>组合成花</strong>：循环6次画6片花瓣，中心画圆形花心：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> turtle</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> turtle.Turtle()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.speed(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 最快速度</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 画6片花瓣</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> _ </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    draw_petal(t, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 调用花瓣函数，size=50</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 画花心（圆形）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.penup()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.goto(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 移动到花心位置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.pendown()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.color(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;yellow&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.begin_fill()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 开始填充</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.circle(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 半径30的圆</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.end_fill()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 结束填充</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">turtle.done()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div></li><li><strong>关键技巧</strong>：用函数封装重复图形（如<code>draw_petal()</code>），通过参数<code>size</code>控制大小，实现“一次定义，多次复用”。</li></ul><h2 id="三、练习题设计-主题创作-参数优化-25分钟" tabindex="-1">三、练习题设计：主题创作+参数优化（25分钟） <a class="header-anchor" href="#三、练习题设计-主题创作-参数优化-25分钟" aria-label="Permalink to &quot;三、练习题设计：主题创作+参数优化（25分钟）&quot;">​</a></h2><h3 id="基础任务-全员完成-我的小房子" tabindex="-1">基础任务（全员完成）：“我的小房子” <a class="header-anchor" href="#基础任务-全员完成-我的小房子" aria-label="Permalink to &quot;基础任务（全员完成）：“我的小房子”&quot;">​</a></h3><ul><li>要求：组合正方形（墙体）和三角形（屋顶），墙体边长100，屋顶边长120，用不同颜色填充（墙体灰色，屋顶红色）。</li><li>提示代码框架：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-light vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> turtle</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> turtle.Turtle()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 画墙体（正方形）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.color(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;gray&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.begin_fill()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;"> _ </span><span style="--shiki-light:#D73A49;--shiki-dark:#D73A49;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.forward(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">    t.right(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.end_fill()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 画屋顶（三角形）—— 提示：先移动到墙体顶部</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.penup()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.goto(</span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#005CC5;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 墙体顶部中点</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.pendown()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.color(</span><span style="--shiki-light:#032F62;--shiki-dark:#032F62;">&quot;red&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.begin_fill()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 补充三角形代码...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">t.end_fill()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#24292E;">turtle.done()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></li></ul><h3 id="进阶任务-选做-四季花园" tabindex="-1">进阶任务（选做）：“四季花园” <a class="header-anchor" href="#进阶任务-选做-四季花园" aria-label="Permalink to &quot;进阶任务（选做）：“四季花园”&quot;">​</a></h3><ul><li>绘制包含3种图形的花园：花朵（6片花瓣）、小草（多个三角形）、太阳（圆形），用变量控制每种图形的大小和位置（如<code>flower_size = 60</code>，<code>sun_x = 150</code>）。</li></ul><h3 id="教师支持" tabindex="-1">教师支持： <a class="header-anchor" href="#教师支持" aria-label="Permalink to &quot;教师支持：&quot;">​</a></h3><ul><li>开放“参数调试台”：学生可输入不同<code>size</code>值，实时预览图形变化（如花瓣<code>size=30</code>vs<code>size=60</code>的区别），理解“参数决定形态”。</li></ul><h2 id="四、讲解与互评-从-作品-到-规律-15分钟" tabindex="-1">四、讲解与互评：从“作品”到“规律”（15分钟） <a class="header-anchor" href="#四、讲解与互评-从-作品-到-规律-15分钟" aria-label="Permalink to &quot;四、讲解与互评：从“作品”到“规律”（15分钟）&quot;">​</a></h2><ol><li><strong>分组互评</strong>：每组选1份作品，用“评分表”从“图形组合合理性”“参数一致性”“创意性”打分，举例：“这个房屋的屋顶边长比墙体宽，看起来更稳固——参数设计很合理”。</li><li><strong>函数价值讨论</strong>：提问：“如果不用<code>draw_petal()</code>函数，画6片花瓣需要写多少行代码？”（强化“函数简化重复工作”的意义）。</li><li><strong>几何规律总结</strong>：师生共同完成“图形参数表”——<table tabindex="0"><thead><tr><th>图形</th><th>边数</th><th>转向角度</th><th>核心参数</th></tr></thead><tbody><tr><td>正方形</td><td>4</td><td>90°</td><td>边长</td></tr><tr><td>三角形</td><td>3</td><td>120°</td><td>边长</td></tr><tr><td>花瓣</td><td>-</td><td>60°/120°</td><td>弧线半径（size）</td></tr></tbody></table></li></ol><h2 id="五、总结与作业-5分钟" tabindex="-1">五、总结与作业（5分钟） <a class="header-anchor" href="#五、总结与作业-5分钟" aria-label="Permalink to &quot;五、总结与作业（5分钟）&quot;">​</a></h2><h3 id="课堂总结" tabindex="-1">课堂总结： <a class="header-anchor" href="#课堂总结" aria-label="Permalink to &quot;课堂总结：&quot;">​</a></h3><ul><li>组合图形=简单图形“拼积木”（顺序/位置）+ 函数封装（复用代码）；</li><li>角度规律：边数n → 转向角度= 360°÷n；</li><li>参数控制：用变量（如<code>size</code>）调整图形大小，让代码更灵活。</li></ul><h3 id="课后作业" tabindex="-1">课后作业： <a class="header-anchor" href="#课后作业" aria-label="Permalink to &quot;课后作业：&quot;">​</a></h3><ol><li>完善“四季花园”作品，添加1种新图形（如栅栏=多个小长方形）；</li><li>填写“创意设计表”：记录每个图形的组成、参数和位置坐标，下次课分享设计思路。</li></ol><h2 id="教学理论支撑与设计理由" tabindex="-1">教学理论支撑与设计理由： <a class="header-anchor" href="#教学理论支撑与设计理由" aria-label="Permalink to &quot;教学理论支撑与设计理由：&quot;">​</a></h2><ol><li><strong>自我决定理论</strong>：通过“主题创作”（房屋、花园）赋予任务自主性，学生可自由选择颜色、大小，满足“自主需求”；分组互评强化“能力感”与“归属感”。</li><li><strong>STEAM工程思维</strong>：“分解-组合”的设计过程（复杂图形→简单单元→代码实现），培养工程领域的系统设计思维，同时融合数学（角度计算）与艺术（美学布局）。</li><li><strong>迁移学习</strong>：从“实物图形分解”到“代码组合”，帮助学生建立“生活问题→编程解决”的迁移能力，为后续复杂项目（如游戏场景）奠定基础。</li></ol>`,33)])])}const g=i(e,[["render",t]]);export{c as __pageData,g as default};
